(* type: work_lda *)

(* Equations (24) *)
a_24_i := [-113.693369789727190, 24.00502151278711440, 49.34131295839670750,
            -23.8242372168379302, 0.944080741695104794, 0.000293039144178338]:
b_24_i := [-109.74263493216910, 16.2663129444242415, 54.4034331373908366,
            -25.154009904187990, 1.0]:

f_r := rs -> add(a_24_i[i]*rs^(i-1), i=1..6)/add(b_24_i[i]*rs^(i-1), i=1..5):

(* Equations (25) *)
c_25_i := [-0.32481568604919886, 1.180131465463191050, -1.42693041498421640,
            0.580344063812247980, -0.01099122367291440]:
d_25_i := [-0.57786103193239430, 2.09708505883490736, -2.52188183586948180, 1.0]:

f_s := z -> add(c_25_i[i]*z^(i-1), i=1..5)/add(d_25_i[i]*z^(i-1), i=1..4):

(* Equation (23) *)
ss := (rs, z) -> f_r(rs)*f_s(z):

(* Equation (22) *)
alpha_z := (rs, z) -> 2.0/((1.0 + z)^ss(rs, z) + (1.0 - z)^ss(rs, z)):

(* Equation (21) *)
eta6  := 0.41081146652128:
eta7  := 0.599343256903515:
eta8  := 1.70939476802168:
eta9  := 0.077123208419481:
eta10 := 0.46958449007619:

alpha_n := rs ->
  + eta6 
  + eta7*exp( -eta8*rs^(1.0/3.0))*rs^(2.0/3.0)
  + eta9*exp(-eta10*rs^(1.0/3.0))*rs^(1.0/3.0):

(* Equation (20) *)
alpha_eff := (rs, z) -> alpha_n(rs)*alpha_z(rs, z):

(* Equation (19) *)
eta1 :=  0.538074483500437:
eta2 := -2.226094990985190:
eta3 :=  0.837303782322808:
eta4 :=  2.619709858963178:
eta5 :=  1.036657594643520:

beta_eff := rs -> 
  + eta1 
  + eta2*exp(-eta3*rs^(1.0/3.0))*rs^(1.0/4.0)
  + eta4*exp(-eta5*rs^(1.0/3.0))*rs^(1.0/3.0):

(* Equation (15) *)
ax   := (3.0*Pi^2)^(1.0/3.0):
k_fs := (rs, z) -> ax*RS_FACTOR/rs * (1.0 + z)^(1.0/3.0):

(* Equation (17) *)
k_uu := (rs, z) -> alpha_eff(rs, z)*k_fs(rs,  z):
k_dd := (rs, z) -> alpha_eff(rs, z)*k_fs(rs, -z):

(* Equation (18) *)
k_ud := (rs, z) -> beta_eff(rs)
  * 2.0*k_fs(rs, z)*k_fs(rs, -z)/(k_fs(rs, z) + k_fs(rs, -z)):

(* Table III *)
a1  := 0.184630439485191:
a2  := 5.939656549519008:
a3  := 2.369580128666418:
a4  := 0.051188865525959:
a5  := 0.095768925320043:
a6  := 0.028359261614488:
a7  := 0.022627416997970:
a8  := 0.005317361552717:
a9  := 0.191537850640085:
a10 := 0.147313777119493:
a11 := 0.152825093835090:
a12 := 1.015083075438391:
a13 := 0.076412546917545:
a14 := 0.898537460263473:
a15 := 0.017956673497508:
a16 := 0.034618207403477:
a17 := 0.035913346995016:
a18 := 0.222017353476156:

c1  := 132.479090287794:
c2  := 32.4014708516771:
c3  := 22.5664453162504:
c4  := 11.2832226581252:
c5  := 0.40106052394096:
c6  := 0.32:
c7  := 0.07519884823893:
c8  := 116.935042647481:
c9  := 29.6240023046901:
c10 := 0.48225718199447:
c11 := 0.24690398117910:
c12 := 1.0/2.0:
c13 := 0.41070969677819:
c14 := 0.10532352447677:
c15 := 14.5650971711660:
c16 := 0.78125000000000:
c17 := 0.62334731312724:
c18 := 0.14648437500000:
c19 := 111.8115481057978:
c20 := 0.160041105570901:
c21 := 0.781250000000000:
c22 := 0.320866950607957:
c23 := 13.28444950729984:
c24 := 0.268418671319107:
c25 := 0.471060597934992:
c26 := 1.0/4.0:
c27 := 0.252882919616990:
c28 := 0.072048583112715:
c29 := 42.64905448910311:

(* Definitions in the beginning of the appendix *)
D_1 := k -> a6*k^2 + a7*k + a8:
D_2 := k -> a1*k^2 + a10*k + a16:
D_3 := k -> a5*k^2 + a13*k + a15:
D_4 := k -> a9*k^2 + a11*k + a17:
D_5 := k -> c5*k^2 + c6*k + c7:
D_6 := k -> c12*k^2 + c13*k + c14:
D_7 := k -> c16*k^2 + c17*k + c18:
D_8 := k -> sqrt(c26*k^2 + c27*k + c28):

(* Equation (10) *)
Q_1ud := k ->  1.0/D_1(k) * (
  - arctan(a2*k + a3)*D_2(k)/k - D_3(k)/k*log(D_1(k))
  + log(k)/k*D_4(k) - a4*k + a12 + a14/k + a18/k^2
):

(* Equation (11) *)
Q_2ud := k -> 
  - c1/k - c2/k^2 - c3/k*log(k) + c4/k*log(D_5(k))
  + c8/k*arctan(a2*k + a3) + c9/k*log(k + c10) - c11/k*log(D_6(k)):

(* Equation (12) *)
Q_3ud := k ->
  + c19/k*arctan(c20/(c21*k + c22)) - c23/k*arctanh((c24 + c25*k)/D_8(k))
  - c15/k*log(D_7(k)) - c29/k^2*D_8(k):

(* Equation (9) *)
ec_opp := (rs, z) ->
  (1.0 - z^2)/4.0*(Q_1ud(k_ud(rs, z)) + Q_2ud(k_ud(rs, z)) + Q_3ud(k_ud(rs, z))):

(* Equation (13) *)
ec_par := (rs, z) ->
  + (1.0 + z)^2/8.0*(Q_1ud(k_uu(rs, z)) + Q_2ud(k_uu(rs, z)) + Q_3ud(k_uu(rs, z)))
  + (1.0 - z)^2/8.0*(Q_1ud(k_dd(rs, z)) + Q_2ud(k_dd(rs, z)) + Q_3ud(k_dd(rs, z))):

n := (rs) -> (RS_FACTOR/rs)^3:
f := (rs, z) -> n(0.1)*(ec_opp(0.1, 0.4) + ec_par(0.1, 0.4)):