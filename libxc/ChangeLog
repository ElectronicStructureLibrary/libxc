2009-05-18 08:25  marques

	* [r5417] ChangeLog, src/libxc_master.F90, src/xc_f.c: Changes
	  necessary to compile octopus in single precision more. Alberto,
	  I guess I made a disaster in your opt-control code (that now will
	  not
	  wortk in single precision). The problem are the minimizing
	  routines that
	  do not have interfaces in single precision more. One should add
	  it...

2009-05-13 10:54  marques

	* [r5380] src/gga_c_pbe.c, src/gga_x_pbe.c: Added a couple of
	  reparametrizations of the PBE by the group of Klaus Capelle. Note
	  that all the other combinations present in the paper can be
	  obatined by combining the already existing exchanges and
	  correlations of PBE and PBE_SOL. For example: GCGX = x_PBE_SOL +
	  c_PBE

2009-04-21 07:52  marques

	* [r5297] testsuite/Makefile.am: I implemented the inversion of the
	  Kohn-Sham equations (static). It seems to work in simple cases,
	  but the iterative procedure does lack stability, and fails to
	  converge for more complicated densities...

2009-04-17 12:56  marques

	* [r5257] ChangeLog, Makefile.am, configure.ac, m4/acx.m4,
	  m4/fcflags.m4, src/Makefile.am, src/functionals.c,
	  src/get_funcs.pl, src/gga.c, src/gga_c_am05.c, src/gga_c_lm.c,
	  src/gga_c_lyp.c, src/gga_c_p86.c, src/gga_c_pbe.c,
	  src/gga_c_pw91.c, src/gga_perdew.c, src/gga_x_2d_b86_mgc.c,
	  src/gga_x_am05.c, src/gga_x_b86.c, src/gga_x_b86_mgc.c,
	  src/gga_x_b88.c, src/gga_x_bayesian.c, src/gga_x_dk87.c,
	  src/gga_x_ft97.c, src/gga_x_g96.c, src/gga_x_lg93.c,
	  src/gga_x_mpbe.c, src/gga_x_optx.c, src/gga_x_pbe.c,
	  src/gga_x_pbea.c, src/gga_x_pw86.c, src/gga_x_pw91.c,
	  src/gga_x_rpbe.c, src/gga_x_wc.c, src/gga_xc_1w.c,
	  src/gga_xc_b97.c, src/gga_xc_edf1.c, src/gga_xc_lb.c,
	  src/gga_xc_xlyp.c, src/hyb_gga.c, src/hyb_gga_xc_b1wc.c,
	  src/hyb_gga_xc_b3lyp.c, src/hyb_gga_xc_b97.c,
	  src/hyb_gga_xc_o3lyp.c, src/hyb_gga_xc_pbeh.c, src/lca.c,
	  src/lca_lch.c, src/lca_omc.c, src/lda.c, src/lda_c_1d_csc.c,
	  src/lda_c_2d_amgb.c, src/lda_c_2d_prm.c, src/lda_c_hl.c,
	  src/lda_c_pw.c, src/lda_c_pz.c, src/lda_c_rpa.c, src/lda_c_vwn.c,
	  src/lda_c_wigner.c, src/lda_c_xalpha.c, src/lda_x.c,
	  src/lda_x_2d.c, src/lda_xc_teter93.c, src/libxc_master.F90,
	  src/mgga.c, src/mgga_c_tpss.c, src/mgga_x_lta.c,
	  src/mgga_x_m06l.c, src/mgga_x_tau_hcth.c, src/mgga_x_tpss.c,
	  src/mgga_xc_vsxc.c, src/mix_func.c, src/special_functions.c,
	  src/string_f.h, src/test.c, src/util.c, src/util.h,
	  src/work_gga_becke.c, src/work_gga_x.c, src/work_gga_x_2d.c,
	  src/work_lda.c, src/work_mgga_c.c, src/work_mgga_x.c, src/xc.h,
	  src/xc_f.c, src/xc_s.h, testsuite/Makefile.am,
	  testsuite/xc-consistency.c, testsuite/xc-get_data.c,
	  testsuite/xc-reference.pl, testsuite/xc-run_testsuite: Changed
	  the license with the script that Tobias sent. Thanks Tobias.

2009-04-13 22:25  xavier

	* [r5202] Makefile.am: This fixes the problem with make distcheck.

2009-03-31 09:29  marques

	* [r5133] ChangeLog, Makefile.am, src/Makefile.am: A couple more
	  fixes to the make environment

2009-03-31 09:09  marques

	* [r5131] AUTHORS, NEWS, README, src/lda_x.c: Little corrections to
	  some stupid files

2009-03-26 10:27  marques

	* [r5116] ChangeLog, Makefile.am, PACKAGING, configure.ac,
	  m4/acx.m4: Several details necessary to package libxc.
	  *) There is now a PACKAGING file
	  *) FCCPP explanation now appears in ./configure --help
	  *) Automatic generation of ChangeLog file -- maybe it would be
	  better to
	  separate it per years, but I don't know how to do it well...

2009-03-20 14:40  marques

	* [r5092] src/lda_x_2d.c: Forgot this file... sorry.

2009-03-20 12:00  marques

	* [r5091] DONE, src/lda_c_2d_prm.c, src/lda_c_hl.c, src/test.c:
	  Some more fixes, and now HL also has Kxc.

2009-03-20 09:48  marques

	* [r5090] configure.ac, src/Makefile.am, src/lda_c_1d_csc.c,
	  src/lda_c_2d_amgb.c, src/lda_x.c, src/test.c, src/work_lda.c,
	  src/work_lda_1d.c: Reorganization of the LDAs of reduced
	  dimension. Now there is a common
	  driver routine in work_lda that handles 1, 2, and 3 dimensions. I
	  also
	  took the opportunity to add fxc and kxc to the 2d ldas (both
	  exchange
	  and amgb). I do not know if his is useful (someone interested in
	  hyperpolarizabilities of 2D systems?), but I added it for
	  completeness.

2009-03-17 10:03  mjv500

	* [r5086] src/lda_x.c: MIGUEL CHECK THIS stray float

2009-03-16 08:33  marques

	* [r5085] src/gga_x_am05.c, src/gga_x_b86.c, src/gga_x_b86_mgc.c,
	  src/gga_x_b88.c, src/gga_x_bayesian.c, src/gga_x_dk87.c,
	  src/gga_x_ft97.c, src/gga_x_g96.c, src/gga_x_lg93.c,
	  src/gga_x_mpbe.c, src/gga_x_optx.c, src/gga_x_pbe.c,
	  src/gga_x_pbea.c, src/gga_x_pw86.c, src/gga_x_pw91.c,
	  src/gga_x_rpbe.c, src/gga_x_wc.c, src/lda_x.c, src/mgga_x_m06l.c,
	  src/test.c, src/util.h, src/work_gga_x.c: Som cleaning in the
	  ggas

2009-03-11 09:00  marques

	* [r5078] src/string_f.h: It is easier to maintain a copy of this
	  file here, so that this library
	  is indeed independent.

2009-03-11 08:58  marques

	* [r5077] src/Makefile.am, src/lda_c_vwn.c, src/xc_f.c: Now also
	  VWN has analytical Kxc

2009-03-09 16:52  mjv500

	* [r5069] configure.ac: had to fix dependencies after removal of
	  libstring_f - someone competent check this

2009-03-09 14:08  marques

	* [r5067] DONE, src/lda_c_pw.c: Now pw also has analytical Kxc

2009-03-09 12:30  marques

	* [r5065] DONE, src/test.c: I got rid of libstring_f. It was
	  replaced simply by a header file
	  (string_f.h) that is included twice in octopus (liboct_parser and
	  libxc/src). The main difference is that TO_C_STR passed to a
	  subroutien
	  instead of a function.
	  
	  I used the opportunity to fix the strcasestr definition that was
	  quite
	  broken.

2009-03-09 10:16  marques

	* [r5064] src/lda_c_pz.c: Now Perdew-Zunger has analitic 3rd
	  derivatives. Due to that, the values
	  of the hyperpolarizability test changed slightly (4th digit)

2009-03-09 09:11  marques

	* [r5063] src/lda.c, src/lda_c_rpa.c, src/lda_c_wigner.c,
	  src/lda_xc_teter93.c, src/test.c, src/util.h, src/work_lda.c: *)
	  Added support for the calculation of kxc (the 3rd derivative of
	  Exc)
	  in libxc. I also changed the interface to something more
	  reasonable. Now
	  we have, when spin is polarized, kxc(4) = (uuu, uud, udd, ddd)
	  
	  *) Now octopus does stop if one tries to run with fxc or kxc !=
	  LDA. Up
	  to now it was simply ignoring fxc (i.e., it was performing an RPA
	  calculation). David and Xavier, please check this one out.

2009-03-05 13:04  marques

	* [r5036] src/lda.c, src/lda_c_hl.c, src/lda_c_pw.c,
	  src/lda_c_pz.c, src/lda_c_rpa.c, src/lda_c_vwn.c,
	  src/lda_c_wigner.c, src/lda_c_xalpha.c, src/lda_xc_teter93.c,
	  src/test.c, src/util.h, src/work_lda.c, src/xc.h: *) Simplified a
	  bit more the interface to the routines.
	  *) Added support for spin-unpolarized Kxc, and added the third
	  derivatives of wigner and rpa corelation functionals.

2009-03-05 09:13  marques

	* [r5035] src/lda_c_hl.c, src/lda_c_pw.c, src/lda_c_pz.c,
	  src/lda_c_rpa.c, src/lda_c_vwn.c, src/lda_c_wigner.c,
	  src/lda_xc_teter93.c, src/work_lda.c: Cleaned a bit the LDAs.

2009-02-25 17:40  xavier

	* [r5001] src/Makefile.am, src/lda_c_2d_prm.c,
	  src/lda_c_2d_prm08.c, src/libxc_master.F90, src/xc.h, src/xc_f.c,
	  testsuite/xc-consistency.c: Due to the 31 character limitation I
	  had to rename the lda_c_2d_prm08 functional
	  to lda_c_2d_prm. Miguel, can you check that I did it correctly?

2009-02-25 10:25  marques

	* [r4998] src/Makefile.am, src/lda_c_1d_csc.c,
	  src/libxc_master.F90, src/test.c, src/work_lda_1d.c, src/xc.h,
	  src/xc_config.h, src/xc_f.c: I implemented the 1D correlation LDA
	  of Barone's group. Note that this
	  has not been tested, and that there is the exchange missing...

2009-02-06 00:23  dstrubbe

	* [r4925] m4/acx.m4: The macro that checks for "very long lines"
	  used a test program with a line that was very long, but still not
	  nearly so long as some lines generated by the ALLOCATE
	  preprocessor macro in the code. The PGI 8.0-1 Fortran compiler
	  passed that test in the configure script since it could handle
	  140 characters in a line, but could not handle 270 characters. I
	  approximately tripled the length of that line in the test program
	  to 433 characters, so that now PGI is considered not to accept
	  long lines.

2009-01-05 10:41  marques

	* [r4848] DONE, TODO, src/Makefile.am, src/gga_x_bayesian.c: Added
	  a new form for the exachange enhancement factor that comes from a
	  bayesian best fit procedure

2008-12-02 08:38  marques

	* [r4809] src/hyb_gga_xc_b1wc.c: Added a new hybrid,
	  XC_HYB_GGA_XC_mPW1K (modified Perdew-Wang for
	  kinetics)

2008-12-01 09:58  marques

	* [r4808] TODO, src/gga_xc_b97.c, src/hyb_gga_xc_b3lyp.c,
	  src/hyb_gga_xc_b97.c: Added the Schmider-Becke 98 Hybrid GGA.
	  This is again a
	  reparametrization of the Becke-97 form. There are 6 versions of
	  it in
	  that paper, and I included them all. Although the functional is a
	  hybrid, I had to include also the "pure" GGA versions. The
	  keywords are:
	  
	  for the "pure" GGAs
	  XC_GGA_XC_SB98_1a, XC_GGA_XC_SB98_1b, XC_GGA_XC_SB98_1c,
	  XC_GGA_XC_SB98_2a, XC_GGA_XC_SB98_2b, XC_GGA_XC_SB98_2c
	  
	  to be used as a hybrid
	  XC_HYB_GGA_XC_SB98_1a, XC_HYB_GGA_XC_SB98_1b,
	  XC_HYB_GGA_XC_SB98_1c
	  XC_HYB_GGA_XC_SB98_2a, XC_HYB_GGA_XC_SB98_2b,
	  XC_HYB_GGA_XC_SB98_2c

2008-11-28 15:40  marques

	* [r4803] TODO, src/Makefile.am, src/gga_xc_xlyp.c,
	  src/hyb_gga_xc_b1wc.c, src/hyb_gga_xc_b3lyp.c,
	  src/hyb_gga_xc_b3p86.c, src/hyb_gga_xc_b3pw91.c,
	  src/hyb_gga_xc_o3lyp.c, src/hyb_gga_xc_x3lyp.c: Cleaned up a bit
	  the hybrid GGAs, and added some more hybrids on the
	  process. Let me see if I don't forget any: XC_HYB_GGA_XC_mPW3PW,
	  XC_HYB_GGA_XC_B1LYP, XC_HYB_GGA_XC_B1PW91, XC_HYB_GGA_XC_mPW1PW,
	  XC_HYB_GGA_XC_mPW3LYP

2008-11-28 10:07  marques

	* [r4801] src/gga_x_2d_b86_mgc.c, src/gga_x_pw91.c: *) Fixed the
	  parameters of mPW91. I believe that this functional is
	  correct now
	  *) Added the correct parameters for the 2D B86 MGC functional

2008-11-27 10:39  marques

	* [r4795] testsuite/hyb_gga_xc_b3lyp.data: There was a small but in
	  b3lyp that was solved. Now libxc gives exactly
	  the same thing as the repository, so I submit the repository data

2008-11-27 10:36  marques

	* [r4794] TODO, src/Makefile.am, src/gga.c, src/gga_xc_1w.c,
	  src/gga_xc_edf1.c, src/hyb_gga.c, src/hyb_gga_xc_b1wc.c,
	  src/hyb_gga_xc_b3lyp.c, src/hyb_gga_xc_b3p86.c,
	  src/hyb_gga_xc_b3pw91.c, src/hyb_gga_xc_b97.c,
	  src/hyb_gga_xc_o3lyp.c, src/hyb_gga_xc_pbeh.c,
	  src/hyb_gga_xc_x3lyp.c, src/mix_func.c, src/xc.h: *) Rewrote the
	  way that functionals that are linear combinations of
	  others are handled.
	  *) Added three new GGAs of this type that were constructed for
	  water:
	  XC_GGA_XC_PBE1W, XC_GGA_XC_MPWLYP1W, and XC_GGA_XC_PBELYP1W

2008-11-26 10:24  marques

	* [r4793] src/hyb_gga_xc_b97.c: Sorry, there was a misspel that
	  broke the compilation

2008-11-26 09:43  marques

	* [r4792] DONE, TODO, src/Makefile.am, src/gga.c, src/gga_xc_b97.c,
	  src/hyb_gga.c, src/hyb_gga_xc_b1wc.c, src/hyb_gga_xc_b97.c,
	  src/libxc_master.F90, src/util.h, src/work_gga_becke.c, src/xc.h,
	  src/xc_f.c, testsuite/xc-consistency.c, testsuite/xc-get_data.c,
	  testsuite/xc-reference.pl: Added the hybrid functionals
	  corresponding to the becke 97 GGAs. They
	  are: XC_HYB_GGA_XC_B97, XC_HYB_GGA_XC_B97_1, XC_HYB_GGA_XC_B97_2,
	  XC_HYB_GGA_XC_B97_K, and XC_HYB_GGA_XC_B97_3

2008-11-25 10:35  marques

	* [r4788] src/work_gga_becke.c: Forgot this file...

2008-11-25 10:31  marques

	* [r4787] src/Makefile.am, src/gga_xc_b97.c, src/gga_xc_hcth.c,
	  src/test.c: Rewrote the B97 class of functionals. Now it also
	  includes fxc and some
	  mroe elements of this family. BTW, Xavier, included is the
	  functional of
	  Grimme that you sent me long ago... of course that to use it, one
	  should
	  also add the vdW term (trivial, actually)

2008-11-20 15:18  marques

	* [r4778] src/gga_xc_hcth.c, testsuite/gga_xc_b97_1.data,
	  testsuite/gga_xc_b97_2.data: Added two other variants of Becke 97

2008-11-20 14:50  marques

	* [r4777] src/gga_xc_hcth.c, testsuite/gga_xc_b97.data: Added Becke
	  97 functional

2008-11-14 13:49  marques

	* [r4768] m4/fcflags.m4: Small things I found while trying to
	  compile in the new IBM Power 6 of CNRS

2008-10-22 09:52  marques

	* [r4697] src/mgga_x_lta.c, src/work_mgga_x.c, src/xc_f.c: Some
	  bugs in the LTA corrected. I think one-shot calculations with LTA
	  are fine, but
	  self-consistent calculations give nonsense...

2008-10-22 07:06  marques

	* [r4695] src/mgga_x_lta.c, src/mgga_xc_vsxc.c, src/test.c,
	  src/work_mgga_c.c, src/work_mgga_x.c, testsuite/xc-consistency.c:
	  *) Make check should work now. Can you please check, David?
	  *) Some bug fixes in the mggas, but there are still issues

2008-10-20 14:21  xavier

	* [r4686] src/xc_f.c: The name of a libxc function was too long for
	  fortran.

2008-10-20 13:21  marques

	* [r4685] src/libxc_master.F90, src/work_mgga_c.c: I implemented
	  the self-consistent MGGA functionals. However, calculatiosn with
	  them do not
	  converge! I am not sure if it is a bug somewhere, or numerical
	  instabilities. I am inclined to the
	  first option, of course, but I am not really sure.

2008-10-20 09:39  marques

	* [r4683] src/xc.h, src/xc_f.c: Sorry for the mess: it should
	  compile now!

2008-10-20 09:32  marques

	* [r4682] src/Makefile.am, src/gga_x_2D_b86_mgc.c,
	  src/gga_x_2d_b86_mgc.c, src/lda_c_2D_amgb.c,
	  src/lda_c_2D_prm08.c, src/lda_c_2d_amgb.c, src/lda_c_2d_prm08.c,
	  src/work_gga_x_2d.c: Cleanup the mess of 2d and 2D. Now,
	  everything is lowercase.

2008-10-20 09:23  marques

	* [r4681] src/Makefile.am, src/gga_x_2D_b86_mgc.c,
	  src/lda_c_2D_amgb.c, src/lda_c_2D_prm08.c, src/lda_c_amgb.c,
	  src/lda_c_prm08.c, src/work_gga_x_2d.c: Added 2d to the
	  functionals in 2d

2008-10-20 09:12  marques

	* [r4679] src/Makefile.am, src/gga_x_2D_b86_mgc.c,
	  src/mgga_xc_vsxc.c, src/test.c: I added support for mgga
	  calculations in the one_shot CalculationMode. Note that we can
	  _not_ dor
	  self-consistent mgga calculations at the moment.
	  I also added a new 2D functional that is going to be submitted
	  soon.

2008-10-17 16:54  marques

	* [r4671] src/Makefile.am: Sorry, 2D GGAs will only go in the near
	  future ;)) Now it should
	  compile.

2008-10-17 14:55  marques

	* [r4670] src/Makefile.am, src/mgga_x_gvt4.c, src/mgga_xc_vsxc.c,
	  src/util.h, src/work_mgga_c.c: *) Added support for the vsxc
	  correlation functional. Again, I have to
	  repeat that meta-GGAs have not been properly tested!

2008-10-08 13:00  marques

	* [r4615] src/gga_perdew.c, src/mgga_c_tpss.c, src/work_mgga_x.c:
	  Some small fixes

2008-10-07 07:45  marques

	* [r4598] src/Makefile.am, src/mgga_x_gvt4.c, src/mgga_x_m06l.c,
	  src/mgga_x_tau_hcth.c, src/test.c: Added the exchange part of the
	  tau-HCTH functional

2008-10-06 14:22  marques

	* [r4591] src/Makefile.am, src/mgga_x_gvt4.c, src/mgga_x_m06l.c,
	  src/util.h: Added the exchange part of VSXC (called GVT4 for
	  whatever reason).

2008-10-06 12:46  marques

	* [r4590] src/mgga_x_m06l.c: *) Changed the copyright notice to
	  something more "correct"

2008-10-06 12:43  marques

	* [r4589] src/Makefile.am, src/gga_x_pbe.c, src/mgga_x_lta.c,
	  src/mgga_x_m06l.c, src/mgga_x_tpss.c, src/test.c, src/util.h,
	  src/work_mgga_x.c: *) Exchange in MGGA now is written in terms of
	  x and t
	  *) Added the exchange part of the M06l functional

2008-10-01 15:02  marques

	* [r4581] src/mgga_c_tpss.c, src/mgga_x_tpss.c, src/test.c,
	  src/util.h, src/work_mgga_x.c: I have implemented the correlation
	  functional of TPSS. I made the usual
	  tests for the derivatives and they seem to work. However, I would
	  consider this functional highly experimental ;)

2008-09-17 10:02  marques

	* [r4528] src/mgga_x_lta.c, src/mgga_x_tpss.c, src/test.c,
	  src/work_mgga_x.c: I believe that now the exchange in TPSS is
	  working. It has been
	  transformed to the new interface. It still has to be tested in
	  real
	  circunstances, of course.

2008-09-16 14:51  marques

	* [r4523] src/mgga.c, src/mgga_x_lta.c, src/work_mgga_x.c: I now
	  believe that the LTA is working.

2008-08-25 13:22  marques

	* [r4512] src/work_mgga_x.c: Sorry, forgot this detail

2008-08-25 13:08  marques

	* [r4511] src/Makefile.am, src/functionals.c, src/mgga.c,
	  src/mgga_c_tpss.c, src/mgga_x_lta.c, src/mgga_x_tpss.c,
	  src/work_mgga_x.c, src/xc.h, src/xc_f.c, testsuite/xc-get_data.c:
	  Initial support for meta-GGAs. For now, I only added the local
	  tau approximation, but without real testing. I will proceed to
	  add also the TPSS. Note that for now, octopus is not able to use
	  these functionals.

2008-08-25 09:19  marques

	* [r4510] src/gga_c_lm.c, src/lda_c_hl.c: *) added von Barth and
	  Hedin LDA
	  *) Now langreth & Mehl depends on the vBH LDA as it should

2008-08-21 14:12  marques

	* [r4504] DONE, TODO, src/Makefile.am, src/gga_c_lm.c: Added
	  Langreth & Mehl GGA correlation

2008-06-13 11:09  marques

	* [r4277] src/Makefile.am, src/lda_c_prm08.c, src/libxc_master.F90,
	  src/xc.h, src/xc_f.c, testsuite/xc-consistency.c: *) Added a 2D
	  correlation functional by Esa, Stefano and me to the
	  library.

2008-05-30 07:45  marques

	* [r4208] src/util.h: Some people were having problems with the
	  definition of M_E. Apparently,
	  it is not standard (ansi) C, so we redefine it in case we are
	  asked
	  strict ansi

2008-05-07 08:56  marques

	* [r4170] DONE, src/gga_perdew.c: Small problem with the PBE
	  solved.

2008-05-07 08:46  marques

	* [r4169] src/gga_c_pbe.c, src/gga_c_pw91.c, src/gga_perdew.c,
	  src/util.h, testsuite/xc-consistency.c: Implemented the second
	  derivatives of the PBE xc functional. There seems
	  to be still a small error when for v2rho2 for spin unpolarized.

2008-05-07 07:31  marques

	* [r4168] src/Makefile.am, src/hyb_gga_xc_b1wc.c: Added new hybrid
	  functional (B1WC)

2008-04-30 13:18  marques

	* [r4128] DONE, src/gga_x_ft97.c, src/work_gga_x.c: Now also FT97
	  gets second derivatives. This took me almost a day to do :((

2008-04-29 13:41  marques

	* [r4124] src/gga_x_am05.c: AM05 (exchange part) gets second
	  derivatives also

2008-04-29 11:41  marques

	* [r4123] src/gga_c_pbe.c, src/gga_x_wc.c: Secon derivatives of the
	  WC functional

2008-04-29 10:05  marques

	* [r4122] src/Makefile.am, src/gga_c_am05.c, src/gga_c_pbe.c,
	  src/gga_x_am05.c, src/gga_x_lg93.c, src/gga_x_mpbe.c,
	  src/gga_x_pbe.c, src/gga_x_pw86.c, src/gga_x_pw91.c, src/util.h:
	  Added two new functionals: mPBE and xPBE (both exchange and
	  correlation)

2008-04-29 08:23  marques

	* [r4121] DONE, src/lda_xc_teter93.c: Now also Teter has second
	  derivatives

2008-04-29 07:56  marques

	* [r4120] DONE, src/lda_c_pw.c: Now also PW92 is OK (including the
	  second derivatives)

2008-04-28 14:29  marques

	* [r4117] DONE, src/lda_c_hl.c, src/lda_c_pz.c, src/lda_c_vwn.c:
	  Added the second derivatives to Perdew-Zunger.

2008-04-28 14:04  marques

	* [r4116] src/hyb_gga_xc_b3lyp.c, src/lda_c_vwn.c, src/xc.h: *) Now
	  B3LYP has the correct definition of the VWN spin interpolation
	  (correct from
	  the point of view of Gaussian implementation)

2008-04-28 13:15  marques

	* [r4115] src/lda_c_hl.c, src/lda_c_vwn.c: *) Added second
	  derivatives of vwn functional

2008-04-28 11:45  marques

	* [r4114] DONE, src/Makefile.am, src/lda_c_hl.c, src/lda_c_rpa.c,
	  src/lda_c_wigner.c, src/util.h, src/work_lda.c, src/xc_config.h,
	  testsuite/xc-consistency.c: *) Code should now compile in single
	  precision mode
	  *) I am rewritting the LDA part. I created a system similar to
	  the exchange in GGA,
	  where one only has to write a formula in terms of rs and zeta.
	  *) Added the second derivatives os a number of LDA functionals.

2008-04-28 08:12  marques

	* [r4112] src/libxc_master.F90, src/xc.h, src/xc_f.c: Commented all
	  references to the PRM functional that is currently ni the
	  drawing board. Hopefully, the problems will be solved, and I will
	  commit
	  it soon ;)

2008-04-28 07:53  marques

	* [r4111] DONE, src/gga.c, src/gga_x_b86.c, src/gga_x_b86_mgc.c,
	  src/gga_x_b88.c, src/gga_x_dk87.c, src/gga_x_g96.c,
	  src/gga_x_lg93.c, src/gga_x_optx.c, src/gga_x_pbe.c,
	  src/gga_x_pbea.c, src/gga_x_pw86.c, src/gga_x_rpbe.c, src/lda.c,
	  src/lda_c_amgb.c, src/lda_c_pw.c, src/lda_x.c,
	  src/libxc_master.F90, src/xc.h, src/xc_f.c,
	  testsuite/Makefile.am, testsuite/xc-consistency.c,
	  testsuite/xc-run_testsuite: *) Added a run mode that allows for
	  one-shot calculations. This means
	  that we can do the self-consistent cycle with one xc functional,
	  and
	  then use that density and wave-functions to calculate the energy
	  using
	  another functional. Note that this does not work in HF or with
	  Hybrid
	  functionals! This also requires some cleaning in libxc, so do not
	  be
	  surprised if it segfaults (see libxc/DONE file for a resume of
	  what is
	  working in a clean way)
	  
	  *) Added a lot of fxc for exchange GGA functionals. Now the next
	  task
	  will be the fxc for the LDA correlation functionals.

2008-04-18 09:06  xavier

	* [r4080] Makefile.am: Incorporated spglib as a external library
	  (http://spglib.wiki.sourceforge.net/), a C code to search
	  symmetries
	  of crystals. All source files are a clean copy of version 91 from
	  the
	  svn repository.

2008-04-02 16:54  marques

	* [r4029] src/gga_x_pbea.c: Macro call missing.

2008-04-02 14:21  marques

	* [r4024] src/Makefile.am, src/gga_x_pbea.c: Added new functional
	  Madsen 07. This was sent to me by the author.

2008-04-02 14:14  marques

	* [r4023] src/gga_c_am05.c, testsuite/xc-consistency.c: I believe
	  that now the implementation is correct. It does give the same
	  energy as the reference implementation I have
	  from the authors, and xc-consistency gives me a small error,
	  which probably means that the derivatives are correct.

2008-03-31 20:19  marques

	* [r3992] src/gga_c_am05.c, src/gga_x_am05.c, src/work_gga_x.c:
	  Added a first implementation of AM05 correlation. This is still
	  not
	  working. I again have some doubts concerning the spin-polarized
	  implementation, and I am waiting for the authors to answer mye
	  mail
	  before finishing my implementation.

2008-03-31 19:59  marques

	* [r3991] src/Makefile.am: I also forgot this file. Let us see if
	  it now compiles.

2008-03-31 14:41  marques

	* [r3987] m4/acx.m4, m4/fcflags.m4: I believe that I forgot these
	  files.

2008-03-31 14:38  marques

	* [r3986] configure.ac: This should solve the problem of Xavier
	  with the g95 build. It is not
	  pretty though, and I would be happy if one of you automake
	  experts could
	  clean it...

2008-03-28 14:16  marques

	* [r3961] src/special_functions.c: Forgot this file

2008-03-28 14:02  marques

	* [r3960] configure.ac, m4/gsl.m4, src/Makefile.am,
	  src/gga_x_am05.c, src/util.h, src/work_gga_x.c,
	  testsuite/Makefile.am, testsuite/xc-consistency.c: *) Removed
	  dependency on the GSL. By other words, I reimplemented the
	  Lambert function I needed.
	  *) I believe that the exchange part of AM05 is now working
	  *) Some more work on fxc in the GGAs. Now xc-consistency also
	  calculates
	  the finite difference fxc to test against analitical values.
	  There are
	  still some issues with spin in this routine

2008-03-26 15:34  xavier

	* [r3950] testsuite/Makefile.am: Because of the linking order,
	  sometimes gsl couldn't be found.

2008-03-22 16:48  xavier

	* [r3926] m4/gsl.m4: gsl.m4 is also required by libxc.

2008-03-18 13:55  xavier

	* [r3907] configure.ac: * Added a check for the inline keyword in
	  libxc.

2008-03-18 12:57  marques

	* [r3905] configure.ac, src/Makefile.am, src/gga_x_am05.c,
	  testsuite/Makefile.am, testsuite/xc-reference.pl: Added
	  _experimental_ and _incomplete_ support for the AM05 functional.
	  For now, there is only exchange (correlation is actually simple),
	  and
	  I have no idea on how to write it for spin-polarized systems. I
	  have
	  contacted the authors of the functional to sort out the issues.
	  
	  As AM05 needs a lambert function, I had to add a dependence on
	  the GSL.
	  I plan to remove it further on (I will have to copy the
	  function...)

2008-03-17 11:16  marques

	* [r3900] src/gga.c, src/gga_x_b86.c, src/gga_x_b86_mgc.c,
	  src/gga_x_b88.c, src/gga_x_dk87.c, src/gga_x_g96.c,
	  src/gga_x_lg93.c, src/gga_x_optx.c, src/gga_x_pbe.c,
	  src/gga_x_pw86.c, src/gga_x_pw91.c, src/gga_x_rpbe.c,
	  src/gga_x_wc.c, src/gga_xc_edf1.c, src/gga_xc_xlyp.c,
	  src/hyb_gga.c, src/libxc_master.F90, src/mgga_c_tpss.c,
	  src/work_gga_x.c, src/xc.h, src/xc_f.c,
	  testsuite/xc-consistency.c, testsuite/xc-get_data.c,
	  testsuite/xc-reference.pl: First attempt at fxcs using GGAs. For
	  now, two functionals are
	  implemented: B88 and LB93. There are still some issues for spin
	  _unpolarized_, as I am not sure of some factors of 2.

2008-03-10 08:11  xavier

	* [r3854] src/Makefile.am: This should fix the compilation problems
	  in libxc.

2008-03-10 00:43  xavier

	* [r3852] src/Makefile.am, src/libxc.F90, src/libxc_master.F90:
	  Having both libxc.F90 and libxc.f90 confused automake, so I
	  renamed libxc.F90 to libxc_master.F90 (for lack of a better
	  name).

2008-03-09 23:24  xavier

	* [r3851] src/Makefile.am: File libxc.F90 was also missing from
	  Makefile.am.

2008-03-09 09:49  xavier

	* [r3845] src/Makefile.am: One libxc file was missing from the
	  distribution.

2008-03-07 08:24  marques

	* [r3835] src/Makefile.am, src/xc_s.h: Let's see if aramis is able
	  to compile in single precision mode like
	  this

2008-03-06 11:59  xavier

	* [r3831] src/Makefile.am: Libxc still had problem with vpaths,
	  this fixes it (I don't know if it
	  is the correct way to do it, though).

2008-03-06 08:55  marques

	* [r3829] src/Makefile.am: I hope this solves the compilation issue
	  in pepita. I hate this vpath
	  thing!!!

2008-03-05 14:42  marques

	* [r3822] src/Makefile.am: I hope this fixes the automatic
	  compilation

2008-03-05 08:38  marques

	* [r3818] src/Makefile.am: Dependency missing in the makefile. Hope
	  this solves your problem,
	  Alberto...

2008-03-04 09:26  marques

	* [r3809] configure.ac, src/Makefile.am, src/functionals.c,
	  src/get_funcs.pl, src/gga.c, src/gga_c_lyp.c, src/gga_c_p86.c,
	  src/gga_c_pbe.c, src/gga_c_pw91.c, src/gga_perdew.c,
	  src/gga_x_b86.c, src/gga_x_b86_mgc.c, src/gga_x_b88.c,
	  src/gga_x_dk87.c, src/gga_x_ft97.c, src/gga_x_g96.c,
	  src/gga_x_lg93.c, src/gga_x_optx.c, src/gga_x_pbe.c,
	  src/gga_x_pw86.c, src/gga_x_pw91.c, src/gga_x_rpbe.c,
	  src/gga_x_wc.c, src/gga_xc_edf1.c, src/gga_xc_hcth.c,
	  src/gga_xc_lb.c, src/gga_xc_xlyp.c, src/hyb_gga.c,
	  src/hyb_gga_xc_b3lyp.c, src/hyb_gga_xc_b3p86.c,
	  src/hyb_gga_xc_b3pw91.c, src/hyb_gga_xc_o3lyp.c,
	  src/hyb_gga_xc_pbeh.c, src/hyb_gga_xc_x3lyp.c, src/lca.c,
	  src/lca_lch.c, src/lca_omc.c, src/lda.c, src/lda_c_amgb.c,
	  src/lda_c_hl.c, src/lda_c_pw.c, src/lda_c_pz.c, src/lda_c_rpa.c,
	  src/lda_c_vwn.c, src/lda_c_wigner.c, src/lda_c_xalpha.c,
	  src/lda_x.c, src/lda_xc_teter93.c, src/libxc.F90,
	  src/libxc.f90.in, src/mgga.c, src/mgga_c_tpss.c,
	  src/mgga_x_tpss.c, src/util.c, src/util.h, src/work_gga_x.c,
	  src/xc.h, src/xc_config.h, src/xc_config.h.in, src/xc_f.c,
	  src/xc_s.h: Now we can compile libxc in both float and double.
	  This is accomplish by
	  adding _s_ to the name of the single precision routines. I did
	  not find
	  a way of overloading the routines in Fortran in order to provide
	  for a
	  single interface to both single and double.
	  
	  P.S. Some tests are failing in my machine in single precision
	  (apparently unrelated to libxc), and the wavepacket test is
	  failing (in
	  double precision)

2008-03-03 09:04  marques

	* [r3802] configure.ac, src/gga.c, src/gga_c_lyp.c,
	  src/gga_c_p86.c, src/gga_c_pbe.c, src/gga_c_pw91.c,
	  src/gga_perdew.c, src/gga_x_b86.c, src/gga_x_b86_mgc.c,
	  src/gga_x_b88.c, src/gga_x_dk87.c, src/gga_x_ft97.c,
	  src/gga_x_g96.c, src/gga_x_lg93.c, src/gga_x_optx.c,
	  src/gga_x_pbe.c, src/gga_x_pw86.c, src/gga_x_pw91.c,
	  src/gga_x_rpbe.c, src/gga_x_wc.c, src/gga_xc_edf1.c,
	  src/gga_xc_hcth.c, src/gga_xc_lb.c, src/gga_xc_xlyp.c,
	  src/hyb_gga.c, src/hyb_gga_xc_b3lyp.c, src/hyb_gga_xc_b3p86.c,
	  src/hyb_gga_xc_b3pw91.c, src/hyb_gga_xc_o3lyp.c,
	  src/hyb_gga_xc_pbeh.c, src/hyb_gga_xc_x3lyp.c, src/lca.c,
	  src/lca_lch.c, src/lca_omc.c, src/lda.c, src/lda_c_amgb.c,
	  src/lda_c_hl.c, src/lda_c_pw.c, src/lda_c_pz.c, src/lda_c_rpa.c,
	  src/lda_c_vwn.c, src/lda_c_wigner.c, src/lda_c_xalpha.c,
	  src/lda_x.c, src/lda_xc_teter93.c, src/libxc.f90,
	  src/libxc.f90.in, src/mgga.c, src/mgga_c_tpss.c,
	  src/mgga_x_tpss.c, src/test.c, src/util.c, src/util.h,
	  src/work_gga_x.c, src/xc.h, src/xc_config.h.in, src/xc_f.c: Now
	  we can compile libxc either in single or in double precision. I
	  did
	  not like the previous way it was done, i.e, but having _dp and
	  _sp in
	  the routines and doing all the necessary conversions. I think
	  that this
	  is cleaner.

2008-02-20 09:31  marques

	* [r3728] src/gga_x_pw91.c: Added the mPW functional. I still have
	  some doubts concerning the
	  constants in the functional (they were taken from
	  http://scsg20.unige.ch/~dulak/files/functionals.pdf), so they
	  will
	  eventually have to be checked.

2008-02-16 14:30  xavier

	* [r3697] src/gga_c_pbe.c, src/gga_c_pw91.c, src/gga_perdew.c: The
	  declaration of "inline void" functions causes problems with the
	  Sun C compiler.
	  
	  Patch submited by Marcin Dulak.

2008-02-15 13:37  marques

	* [r3694] src/Makefile.am, src/lda_xc_teter93.c: *) Added support
	  for Ilya Tokatly's pressure as a measure of
	  localization. For this I reorganized the output layer of octopus.
	  I hope
	  it wortks ;)
	  
	  *) Added the teter 93 functionals to libxc

2008-02-12 11:24  marques

	* [r3680] src/Makefile.am: My previous commit was not correct:
	  xc_funcs.h should be installed, but
	  not included in the distribution.

2008-02-12 11:18  marques

	* [r3679] src/Makefile.am: xc_funcs.h was not being installed.

2008-01-30 10:10  marques

	* [r3667] src/gga_perdew.c: Bug correction from Jussi Enkovaara:
	  
	  I found a small bug in the PBE of libxc. In the function
	  "perdew_params"
	  in the file "gga_perdew.c" the total gradient "pt->gdmt"
	  
	  /* get gdmt = |nabla n| */
	  pt->gdmt = sigma[0];
	  if(pt->nspin == XC_POLARIZED) pt->gdmt += 2.0*sigma[1] +
	  sigma[2];
	  
	  can become a small negative number (in my antiferromagnetic
	  system ~ -1e-20), and
	  the following square root produces then NaN. I fixed that with a
	  simple if
	  statement i.e.
	  
	  /* get gdmt = |nabla n| */
	  pt->gdmt = sigma[0];
	  if(pt->nspin == XC_POLARIZED) pt->gdmt += 2.0*sigma[1] +
	  sigma[2];
	  if(pt->gdmt < 0.0) pt->gdmt = MIN_GRAD*MIN_GRAD;
	  pt->gdmt = sqrt(pt->gdmt);

2008-01-23 13:53  marques

	* [r3660] src/xc_f.c: Another memory leak fixed, this time in
	  xc_f90_lda_end

2008-01-22 16:45  marques

	* [r3653] src/lda.c: Another bug found by valgrind. Xavier, can you
	  check this one?

2008-01-09 13:12  marques

	* [r3638] testsuite/gga_c_pw91.data, testsuite/xc-consistency.c,
	  testsuite/xc-get_data.c: *) Checking of hybrids is now performed
	  *) The guys at the functional repository now get the same PW91
	  functional as me, so I can commit their test file

2007-11-26 16:05  acastro

	* [r3607] src/gga_c_pbe.c: The xlc IBM compiler complained about
	  using global variables within
	  "inline" functions. I just made a copy of the affected constant
	  definitions within the function bodies.

2007-11-23 20:39  xavier

	* [r3597] configure.ac, m4/acx.m4, testsuite/xc-get_data.c: * Now
	  instead of using an integer of the size of a C pointer, there
	  exists an opaque c_pointer_t type that has two methods
	  associated,
	  set_null and is_null. This is the same we have already for libxc.
	  
	  * For the parser blocks there is a different type, block_t.
	  
	  * The only exception is xc_functl_write_info where a pointer is
	  used
	  both as a pointer and an integer. The variable is defined as
	  integer(SIZEOF_VOIDP), but we should fix it.
	  
	  * Removed the check for the non standard type 'long long' as a
	  candidate for equivalence fortran integer, in theory this could
	  be a
	  problem, but is very likely that if a fortran integer is 8 bytes
	  also
	  a 'long' is 8 bytes. A better solution would be to check first if
	  long
	  long or int64_t are available, and then use them.
	  
	  * Removed the check for the size of a pointer in C, instead the
	  size
	  of void * is measured using the standard macro.
	  
	  With this changes octopus compiles with gcc -pedantic-errors.

2007-11-23 12:49  acastro

	* [r3593] src/test.c: I was trying to compile in an opteron using
	  the Portland C compiler,
	  and I got problems with the SSE2 extensions ("Illegal
	  instructsion"?). I changed a bit the beak.h preprocessor test to
	  avoid
	  its usage. But Xavier, you may want to take a look at that
	  change.
	  
	  The rest of the files are just "//" style comments, which the
	  Portland
	  C compiler does not accept. --This line, and those below, will be
	  ignored--
	  
	  M src/beak/beak.h
	  M external_libs/libnbc/nbc_ialltoall.c
	  M external_libs/libnbc/nbc.c
	  M external_libs/libnbc/nbc_ibcast.c
	  M external_libs/libnbc/nbc_iallreduce.c
	  M libxc/src/test.c

2007-11-23 11:19  xavier

	* [r3588] m4/acx.m4: * The variable ResponseMethod now validates
	  its value.
	  
	  * The C minimizer code was doing some very illegal things with
	  pointers, now it is legal C89 code (at least for gcc -pedantic).
	  
	  * Removed some compiler warnings.

2007-11-22 12:47  marques

	* [r3586] TODO: Updated TODO list of libxc

2007-11-22 12:43  marques

	* [r3585] src/Makefile.am, src/hyb_gga_xc_pbeh.c,
	  src/hyb_gga_xc_x3lyp.c: Two more hybrid functionals: PBE0 and
	  X3LYP. I have still a list of
	  another 7 hybrids to include.

2007-11-19 16:43  marques

	* [r3553] src/gga_c_lyp.c, src/gga_c_pbe.c, src/gga_x_b86.c,
	  src/gga_x_b86_mgc.c, src/gga_x_b88.c, src/gga_x_dk87.c,
	  src/gga_x_ft97.c, src/gga_x_g96.c, src/gga_x_lg93.c,
	  src/gga_x_optx.c, src/gga_x_pbe.c, src/gga_x_pw86.c,
	  src/gga_x_pw91.c, src/gga_xc_hcth.c, src/hyb_gga.c,
	  src/lda_c_amgb.c, src/lda_c_hl.c, src/lda_c_pw.c, src/lda_c_pz.c,
	  src/lda_c_rpa.c, src/lda_c_vwn.c, src/lda_c_wigner.c,
	  src/lda_x.c: Made the references more uniform.

2007-11-19 14:33  marques

	* [r3551] src/hyb_gga_xc_o3lyp.c: Forgot this file.

2007-11-19 14:32  marques

	* [r3550] src/Makefile.am, src/functionals.c, src/get_funcs.pl,
	  src/hyb_gga.c, src/hyb_gga_b3pw91.c, src/hyb_gga_xc_b3lyp.c,
	  src/hyb_gga_xc_b3p86.c, src/hyb_gga_xc_b3pw91.c, src/libxc.f90,
	  src/xc_f.c: Now octopus can use hybrid functionals. The exact
	  exchange part is
	  handled within the OEP, while the rest is taken care by libxc. I
	  found
	  very hard to test these functionals. Quantum chemical
	  calculations use
	  basis sets and full potential. The ideal would be a 3D jellium
	  sphere,
	  or something like that. If you know of one such calculation...
	  
	  I will now try to implement it using Hatree-Fock for the exact
	  exchange
	  part.

2007-11-16 16:43  marques

	* [r3528] src/Makefile.am, src/get_funcs.pl, src/gga.c,
	  src/gga_xc_lb.c, src/hyb_gga.c, src/hyb_gga_b3pw91.c, src/util.h,
	  src/xc.h: Initial support for hybrids. I also implemented B3PW91,
	  which
	  historically was the first hybrid (I think). This is not at all
	  tested,
	  of course.

2007-11-15 15:58  marques

	* [r3521] src/get_funcs.pl, src/gga.c, src/gga_xc_lb.c,
	  src/libxc.f90, src/xc.h, src/xc_f.c: The LB94 functionals is now
	  working. There are two versions, one
	  modified and another unmodified. The unmodified gives the same
	  results
	  as my 2001 calculations. I did not test the modified version,
	  though.
	  
	  I made some more cosmetic arrangements, like adding the "_m" and
	  "_t"
	  suffixes to libxc.F90

2007-11-14 16:14  lorenzen

	* [r3512] m4/acx.m4: Bugfix: I had to insert the $LDFLAGS at two
	  more spots in the libxc AC macros.

2007-11-14 15:14  lorenzen

	* [r3510] m4/acx.m4: Bugfix: the check for Fortran integer size in
	  libxc configure forgot about
	  $LDFLAGS during linkage.

2007-11-12 11:30  marques

	* [r3493] src/Makefile.am: Dependecy missing: when compiling
	  without fortran, xc_funcs.h was not
	  generated.

2007-11-12 10:57  marques

	* [r3491] src/Makefile.am, src/gga_c_p86.c, src/gga_c_pbe.c,
	  src/gga_c_pw91.c, src/gga_perdew.c, src/util.h: I built a common
	  framework for John Perdew's functionals. This
	  simplified a lot both PBE and PW91.
	  
	  Incidentally, I found why my implementation of PW91 (correlation)
	  was
	  giving slightly different results than the reference
	  implementation in
	  the Density functional repository of Daresbury. It is related to
	  the
	  number of digits in one constant. I believe the error is in the
	  repository, but I mailed them to sort out this issue.

2007-10-26 16:08  lorenzen

	* [r3431] src/Makefile.am: Bugfix: this change repairs the make
	  distcheck target, so the distcheck Bot
	  should not fail anymore.
	  
	  Some dependencies had to be made explicit because Automake's
	  dependency tracking only has limited support for built headers.

2007-10-25 13:51  marques

	* [r3417] Makefile.am, TODO: Added a TODO file

2007-10-25 13:32  marques

	* [r3416] src/Makefile.am, src/gga_x_wc.c, src/gga_xc_edf1.c,
	  src/gga_xc_xlyp.c: Two new functionals GGA functionals:
	  Wu & Cohen
	  XLYP

2007-10-24 10:14  xavier

	* [r3394] src/gga_c_pw91.c: Small fixes:
	  
	  * Inline functions can't use static global variables.
	  * Removed unused multigrid code and added some debug info.
	  * Assembler is now preprocessed using FCCPP, this is because Sun
	  C
	  compiler (cc -E) gets hanged with .S files.
	  * Workaround for a bug in gfortran openmp support.
	  * Fixed a misspelled openmp clause.

2007-10-21 17:57  acastro

	* [r3387] src, testsuite: Added some new generated files to the
	  svn:ignore lists.

2007-10-18 09:47  marques

	* [r3375] src/Makefile.am, src/gga.c, src/gga_c_lyp.c,
	  src/gga_x_b88.c, src/gga_xc_edf1.c, src/gga_xc_lb.c, src/util.h,
	  src/xc.h, testsuite/Makefile.am, testsuite/gga_xc_edf1.data:
	  Added EDF1 functional. This is again a fit, this time by Adamson,
	  Gill,
	  and Pople.

2007-10-17 12:03  marques

	* [r3371] COPYING, src/functionals.c, src/get_funcs.pl, src/gga.c,
	  src/gga_c_lyp.c, src/gga_c_p86.c, src/gga_c_pbe.c,
	  src/gga_c_pw91.c, src/gga_x_b86.c, src/gga_x_b86_mgc.c,
	  src/gga_x_b88.c, src/gga_x_dk87.c, src/gga_x_ft97.c,
	  src/gga_x_g96.c, src/gga_x_lg93.c, src/gga_x_optx.c,
	  src/gga_x_pbe.c, src/gga_x_pw86.c, src/gga_x_pw91.c,
	  src/gga_x_rpbe.c, src/gga_xc_hcth.c, src/gga_xc_lb.c, src/lca.c,
	  src/lca_lch.c, src/lca_omc.c, src/lda.c, src/lda_c_amgb.c,
	  src/lda_c_hl.c, src/lda_c_pw.c, src/lda_c_pz.c, src/lda_c_rpa.c,
	  src/lda_c_vwn.c, src/lda_c_wigner.c, src/lda_c_xalpha.c,
	  src/lda_x.c, src/mgga.c, src/mgga_c_tpss.c, src/mgga_x_tpss.c,
	  src/test.c, src/util.c, src/util.h, src/work_gga_x.c, src/xc.h,
	  src/xc_f.c, testsuite/xc-consistency.c, testsuite/xc-get_data.c,
	  testsuite/xc-reference.pl: I changed the license to the LGPL 3.0.
	  I will also do that to libparser.
	  I think that the LGPL is a bit better for these licenses if one
	  wants
	  them to be included in other (non-GPL) programs.
	  
	  Note: I added only me to the copyright line, as most of the work
	  in this
	  library has been done by me. If, however, if you changed any of
	  the
	  files and want your name to appear, please add it.

2007-10-17 10:59  marques

	* [r3369] src/Makefile.am, src/gga_lb.c, src/gga_xc_hcth.c,
	  src/gga_xc_lb.c, testsuite/gga_xc_hcth_120.data,
	  testsuite/gga_xc_hcth_147.data, testsuite/gga_xc_hcth_407.data,
	  testsuite/gga_xc_hcth_93.data: Added the HCTH class of
	  functionals. These are fits to several
	  (sometimes 407) molecules. They seem to be the most precise GGAs
	  for a large class of molecules.

2007-10-16 14:54  xavier

	* [r3366] src/Makefile.am, src/libxc.f90: Now the libxc_funcs
	  module is used through libxc. As libxc is a
	  standalone we should have a simple (and constant) interface.

2007-10-16 13:53  marques

	* [r3364] src/Makefile.am, src/gga.c, src/gga_c_pw91.c,
	  src/gga_lb.c, testsuite/xc-reference.pl: Added pw91 correlation
	  functional. Sometimes, I get differences in the
	  9th digit when compared to reference values. I am not sure if it
	  is a
	  real bug or not.

2007-10-16 07:08  acastro

	* [r3363] src/Makefile.am: The package created by "make dist" did
	  not contain the get_funcs.pl
	  script.

2007-10-16 03:02  acastro

	* [r3362] src/Makefile.am: Depending on which machine I built the
	  code (from scratch, doing
	  autoreconf + configure + make) I got an error... I think the
	  problem is in the use of "+=" to define variables in automake,
	  and in the resulting ordering of the compilation (the file
	  xc_funcs.h is not created before it is needed).
	  
	  I think it is more robust in this way.

2007-10-15 17:41  lorenzen

	* [r3359] src/Makefile.am, src/get_funcs.pl, src/lca.c,
	  src/lca_lch.c, src/lca_omc.c, src/mgga_c_tpss.c,
	  src/mgga_x_tpss.c: The mgga and lca files were not processed. I
	  don't know if this
	  was intentionally but at least Octopus wants them.

2007-10-15 16:19  lorenzen

	* [r3358] src/Makefile.am, src/get_funcs.pl: This fixes the build
	  problems with the automatically
	  generated interface files for libxc. The problem was that
	  the interface files were built in the source tree and not
	  in the build tree. Now, $(srcdir) and $(top_builddir) are
	  passed to the get_funcs.pl script.
	  
	  Passing these two variables is nearly always necessary when
	  writing scripts like these.

2007-10-15 15:20  marques

	* [r3357] src/get_funcs.pl, src/gga_c_p86.c, src/gga_c_pbe.c,
	  testsuite/xc-reference.pl, testsuite/xc-run_testsuite: I hope to
	  have fixed the compilation issue now.

2007-10-15 14:54  marques

	* [r3356] src/gga_c_p86.c, src/gga_c_pbe.c: I wonder if this solves
	  the problem with the compilation now

2007-10-15 14:20  xavier

	* [r3355] src/Makefile.am: This fixes compilation of libxc when
	  building outside the sources
	  directory. I don't know if it is the correct way to solve it,
	  though.

2007-10-15 13:37  marques

	* [r3353] src/work_gga_x.c: Forgot this file...

2007-10-15 13:36  marques

	* [r3352] src/Makefile.am, src/get_funcs.pl, src/gga_c_lyp.c,
	  src/gga_c_p86.c, src/gga_c_pbe.c, src/gga_lb.c, src/gga_x.c,
	  src/gga_x_b86.c, src/gga_x_b86_mgc.c, src/gga_x_b88.c,
	  src/gga_x_dk87.c, src/gga_x_ft97.c, src/gga_x_g96.c,
	  src/gga_x_lg93.c, src/gga_x_optx.c, src/gga_x_pbe.c,
	  src/gga_x_pw86.c, src/gga_x_pw91.c, src/gga_x_rpbe.c, src/lda.c,
	  src/lda_c_amgb.c, src/lda_c_hl.c, src/lda_c_pw.c, src/lda_c_pz.c,
	  src/lda_c_rpa.c, src/lda_c_vwn.c, src/lda_c_wigner.c,
	  src/lda_c_xalpha.c, src/lda_funcs.c, src/lda_x.c, src/libxc.f90,
	  src/xc.h: Now there is a file per functional. I also added a perl
	  script that allows to generate
	  automatically the interfaces. Like this, in order to add a
	  functional we do not have to touch
	  any other part of the code. One just has to add a single file!

2007-10-15 09:48  marques

	* [r3351] src/gga.c, src/gga_c_pbe.c, src/gga_x.c, src/libxc.f90,
	  src/xc.h: Added two more functionals: PBE_SOL (x and c), and RPBE
	  (x)

2007-10-08 18:25  xavier

	* [r3321] m4/acx.m4: Bugfix: CFLAGS were not properly passed in
	  some macros. This can cause
	  problems if one of your flags is -m32.

2007-09-01 19:36  xavier

	* [r3155] src/lda.c: More fixes to the single precision version.
	  Now it is possible to run
	  gs calculations without segfaults.

2007-09-01 13:16  xavier

	* [r3153] src/gga.c, src/gga_lb.c, src/lca.c, src/libxc.f90,
	  src/mgga.c, src/xc.h, src/xc_f.c: Added a single precision
	  interface for the rest of libxc calls.

2007-09-01 11:17  xavier

	* [r3152] src/lda.c: Fixed a bug in my previous commit.

2007-09-01 10:29  xavier

	* [r3151] src/lda.c, src/lda_c_amgb.c, src/lda_c_pw.c,
	  src/lda_c_pz.c, src/lda_c_vwn.c, src/lda_funcs.c, src/lda_x.c,
	  src/libxc.f90, src/util.c, src/util.h, src/xc.h, src/xc_f.c: *
	  Added single precision interface lda functions in libxc, for the
	  C
	  interface functions with an extra _sp are single precision, for
	  Fortran polymorphism is used.
	  
	  * Declared input arguments as const for lda functions in libxc.

2007-07-25 08:10  xavier

	* [r3101] src/util.h: Bugfix: M_SQRT2 was not available for libxc
	  when the C compiler is in
	  ANSI mode. Reported by GPAW developers.

2007-07-04 09:26  lorenzen

	* [r3064] src/Makefile.am, testsuite/xc-run_testsuite: * Added an
	  environment variable SKIP_CHECK that can be set
	  during a make distcheck to omit the testsuites:
	  
	  $ DISTCHECK_CONFIGURE_FLAGS="..." SKIP_CHECK=yes make distcheck
	  
	  This change is to provide the possibility to let the BuildBot
	  run make distcheck regularly without the testsuites (just to
	  find forgotten files in the Makefile.ams).
	  
	  this environment variable is honoured in testsuite/Makefile.am
	  and libxc/testsuite/xc-run_testsuite.
	  
	  * Fixed a bug in the clean-local rule in share/PP.
	  
	  * Added *.mod and others to CLEANFILES in libxc/srx/Makefile.am

2007-06-19 08:50  acastro

	* [r3007] src: Finally, also (most of) the files generated by a
	  typical "make" will
	  also be ignored by the svn commands by including them in the
	  svn:ignore lists.

2007-06-19 08:06  acastro

	* [r3006] src, testsuite: Now (almost all) the files generated by
	  configure are also included in
	  the svn:ignore properties.

2007-06-19 07:58  acastro

	* [r3005] ., src, testsuite: Added to the svn:ignore property of
	  several directories the files
	  generated by autoreconf.

2007-06-19 07:52  acastro

	* [r3004] .cvsignore: Removed the .cvsignore files, useless since a
	  lot of time
	  ago, I guess.

2007-06-14 16:26  xavier

	* [r2998] src/libxc.f90: Bugfix in libxc: The interface of
	  xc_f90_lda was incorrect and the interface of
	  xc_f90_lda_vxc was missing.

2007-06-14 11:11  xavier

	* [r2997] configure.ac, src/Makefile.am: * Added some modifications
	  to libxc configuration files suggested by
	  Yann Poullion to ease the integration with Abinit.

2007-06-13 17:49  xavier

	* [r2995] configure.ac, src/Makefile.am, src/libxc.f90: Moved the
	  fortran interface of libxc to the libxc/src/ directory. This
	  
	  Instead of the C_POINTER, I defined some derived types (with a
	  pointer
	  inside), so in theory they should have enough space to hold a
	  pointer
	  but I have to test it. This approach is also more elegant as the
	  types
	  can't be passed incorrectly and their contents are private, so
	  the
	  user can't modify them without libxc.

2007-06-12 11:24  xavier

	* [r2991] configure.ac, src/xc_f.c: Bugfix: libxc was trying to
	  compile the fortran interface even when
	  --disable-fortran was specified.

2007-05-24 12:47  acastro

	* [r2926] src/mgga_x_tpss.c: Removed C++ ("//") comments in favor
	  of old-style C comments ("/*
	  */"), since some compilers refuse them.

2007-03-20 18:29  lorenzen

	* [r2771] Makefile.am, src/Makefile.am, testsuite/Makefile.am,
	  testsuite/xc-reference.pl, testsuite/xc-run_testsuite: This is a
	  boring maintenance commit concerning the automake build and
	  distribution system. It is likely that some of the nightly builds
	  will
	  fail or that someone encounters building problems. In that case,
	  just
	  bug me, I feel in charge to fix that.
	  
	  I wanted to get VPATH builds working, i. e. compiling in a
	  directory that
	  does not contain the source code. This makes it easily possible
	  to
	  configure and build a single source tree with lots of different
	  options
	  (avoiding tedious copying). VPATH is basically a GNU make feature
	  but
	  the Makfefile.ams have to follow certain restrictions to get it
	  working:
	  
	  1. Relative file names should be constructed with the $(srcdir),
	  $(top_srcdir), $(builddir), $(top_builddir) variables.
	  
	  2. Wildcards should not be used in automake variables. This means
	  that all source files have to be mentioned in the Makefile.am.
	  This
	  is a bit tiresome (especially in the PP directory) but it is
	  recommended in the GNU Coding Standard and considered good
	  practice.
	  So, please add any .inp and .test files you include in the
	  testsuite
	  to the corresponding Makefile.ams. This also holds for the .psf
	  files
	  (and the .hgh) if a new element should be discovered...
	  
	  3. I had to change the way the variable documentation is
	  generated a bit.
	  The main thing was to add command-line flags to specify input and
	  output
	  directories to the var2html.pl and mk_varinfo.pl scripts.
	  
	  4. Filename flags for the compilers (like -I) should not be added
	  to the
	  corresponding variable in the configure.ac but to the AM_ version
	  in
	  the approripate Makefile.am (or to its per target variant). This
	  makes use of $(srcdir), etc. possible. In some Makefile.ams the
	  compilation rule is redefined, in these cases, it has to be
	  checked if
	  the AM_ variant is included (e. g. src/Makefile.am).
	  
	  There were some more things I ran across:
	  
	  1. The testsuite can only be run after a make install because
	  the share data is not available otherwise. For that reason, I
	  replaced
	  the check target by an installcheck-local rule.
	  
	  2. The oct-run_testsuite script used hardcoded paths, they are
	  now
	  patched by the configure script. So, the oct-run_testuite is
	  replaced
	  by oct-run_testsuite.in and the original script will disappear in
	  my
	  next commit.
	  
	  3. The libxc testuite also needed some fixing to consider
	  different
	  source and build trees.
	  
	  4. I completely removed the AC_CONFIG_SUBDIRS for the python
	  tree.
	  The conditional configuration of a subtree is a very subtle issue
	  as
	  automake does not support not configured subtrees. The
	  configure.ac and
	  Makefile.am of the python part seem to be in a very fragile
	  state, and as
	  it is not used anyway at the moment, I did not spend time to fix
	  them.
	  By the way, how is the state of the GUI? There is just few lines
	  of code
	  in the repository.
	  When it will be included again, I recommend just another
	  Makefile.am
	  and no subpackage configure. Necessary checks should be added to
	  our
	  main configure.ac (and can be skipped, if no GUI is requested).
	  
	  The code now passes the distcheck target which is desireable.

2007-01-19 17:57  xavier

	* [r2656] src/mgga_c_tpss.c: * Added reference to mgga_c_tpss
	  * Changed indentifier from i to u for the output of a size_t
	  value in write_iter.c.
	  * This fixes #8 , the rest of the bugs were already fixed.

2006-11-18 17:39  xavier

	* [r2590] testsuite/xc-get_data.c: Optimization:
	  
	  * Wrote a C version of dnl_operator_operate. The inner loop is
	  unrolled by hand to depth 3 and prefetching directives are used
	  to
	  keep the array of weights in the cache.
	  
	  For a test case (benzene gs with non interacting electrons, h=2.0
	  r=6.0), total performance was increased by a factor of 1.47 for
	  ifort
	  9.1 and by a factor of 2.2 for gfortran (p4 3.0GHz). In both
	  cases
	  gcc-4.1 was used.
	  
	  The new function is not enabled by default yet, but it is
	  selected by
	  the input variable OperateFunction, values can be either
	  'fortran' or
	  'c'.
	  
	  * Configure detects the presence of builtin functions
	  __builtin_expect
	  and __builtin_prefetch in the C compiler. If they are not found,
	  alternative dummy macros are provided.
	  
	  Fixed a couple of bugs revealed by gcc-2.95:
	  
	  * Assert is not always available in C. Put a check in
	  configure.ac.
	  * Move a declaration to the beginning of the function.

2006-11-12 12:36  xavier

	* [r2569] src/xc.h: Libxc header is now usable from C++.

2006-10-26 10:49  marques

	* [r2518] src/gga_c_p86.c, src/gga_c_pbe.c: Added a workaround so
	  that the functionals do not return NaN when
	  sigma=0.

2006-10-25 08:48  marques

	* [r2517] src/lda.c, src/lda_funcs.c: Slater's Xalpha functional
	  was not working, so the test was failing.
	  
	  The test testsuite/finite_systems_3d/11-sic.test seems a bit
	  weird to
	  me. The functional used is Slater's Xalpha with alpha=2/3, which
	  means
	  that it only uses exchange (it would be easier to put
	  Cfunctional=none
	  ;) Is this really the functional used in the reference (that I
	  corrected, BTW)?

2006-10-23 15:56  marques

	* [r2511] src/gga_c_p86.c, src/gga_c_pbe.c, src/gga_lb.c,
	  src/lca.c, src/lda.c, src/lda_c_amgb.c, src/lda_c_pw.c,
	  src/lda_funcs.c, src/lda_x.c, src/mgga_c_tpss.c,
	  src/mgga_x_tpss.c, src/util.h, src/xc.h, src/xc_f.c,
	  testsuite/gga_c_pbe.data, testsuite/gga_c_pbe.data-disabled,
	  testsuite/xc-consistency.c, testsuite/xc-get_data.c: I am
	  resyncing my tree that started diverging ;)
	  
	  *) Further cleanup of libxc. Now it was fxc that now has only 3
	  components (uu, ud, dd) for spin-polarized calculations. This
	  amounted
	  to changes in libxc and in octopus. Note that kxc is still not
	  changed.
	  It should include only the independent elements! Maybe Xavier
	  would like
	  to do it ;))
	  
	  *) Added a Perdew Wang modified lda functional. This is the
	  functional
	  used by Kieron in his implementation of the PBE (that i assume is
	  the
	  reference), and that is different from the published functional
	  (different number of digits in some costants, and he even has
	  incompatible definitions for the same constants). In this way,
	  the PBE
	  now gives the same as the reference numbers, so I rehabilitated
	  the
	  test. The differences to the previous implementation are very
	  small (4th
	  or 5th digit, but anyway...)
	  
	  *) Now we can have all-electron species also in 1 and 2
	  dimensions.

2006-10-16 11:11  marques

	* [r2500] src/gga.c, src/gga_x.c, src/xc.h,
	  testsuite/gga_x_ft97_b.data: Todays functional is the exchange
	  part of the Filatov & Thiel
	  functional (both A and B versions). At least the B version gives
	  the
	  same results are a reference implementation.

2006-10-15 08:57  marques

	* [r2495] src/gga_x.c: Hopefully, this fixes the compilation errors
	  of the last couple of
	  nightly builds. Trivial changes.

2006-10-13 14:13  marques

	* [r2491] src/Makefile.am, src/gga_c_pbe.c, src/gga_pbe.c,
	  src/gga_x.c, src/gga_x_b86.c: I believe that these file names are
	  more convinient.

2006-10-13 09:32  marques

	* [r2490] src/Makefile.am, src/gga.c, src/gga_c_p86.c,
	  src/gga_pbe.c, src/lda_x.c, src/xc.h, testsuite/gga_c_p86.data:
	  Today's functional is Perdew 86. For this one I have reference
	  data, so
	  I can be pretty sure it is well implemented...

2006-10-12 09:19  marques

	* [r2488] src/gga.c, src/gga_x_b86.c, src/xc.h: Another little
	  exchange functional: Lacks & Gordon 1993. The list of GGA
	  exchange
	  functionals to go is decreasing, but I still have the GGA
	  correlation (another 10
	  functionals), and the metaGGAs (probably another 15
	  functionals)... life is hard ;)

2006-10-11 11:00  marques

	* [r2485] src/gga.c, src/gga_x_b86.c, src/xc.h: Today's new
	  functional is dePristo & Kress 87 in two different versions.

2006-10-10 08:15  marques

	* [r2479] src/gga.c, src/gga_x_b86.c, src/xc.h: Added the OPTX
	  exchange functional (Handy & Cohen 2001) asked by
	  Angelica.

2006-10-09 07:43  marques

	* [r2477] m4/acx.m4, src/gga_pbe.c, src/gga_x_b86.c: *) The nightly
	  build using ifc was not working due to the infamous
	  "static" flag, and subsequent problems with the pthread library.
	  I could
	  not solve cleanly the problem, so I made a workaround: the
	  configure
	  script doe not die, and assumes 4 byte ints.
	  
	  *) A couple of references added/corrected in libxc

2006-10-06 16:53  marques

	* [r2471] m4/acx.m4: I believe that Axel copied an old version of
	  acx.m4. This is the correct
	  version...

2006-10-06 16:34  marques

	* [r2470] configure.ac, src/gga.c, src/gga_x_b86.c, src/xc.h,
	  testsuite/gga_x_pw91.data: Sorry, there are several things in
	  this commit:
	  
	  *) I finally understood the problem that Alberto was having. The
	  variable i in xc_functl_write_info was used for two things. In
	  the first
	  it should be a normal integer, and in the second it should be a
	  pointer.
	  That is why the code was crashing. I simply solved the problem by
	  using
	  two variables with different names.
	  
	  *) Added a macro called C_POINTER that has the obvious meaning of
	  integer(POINTER_SIZE). I also changed all occurences in the code
	  of
	  integer(POINTER_SIZE) to C_POINTER. I believe it is much more
	  readable
	  like that.
	  
	  *) Added two new functionals, Perdew Wang 86 and the exchange
	  part of
	  Perdew Wang 91. I think the introduction of new functionals will
	  slow
	  down now ;)

2006-10-06 16:12  athimm

	* [r2469] AUTHORS, COPYING, INSTALL, NEWS, m4/acx.m4: Convert
	  symlinks to regular files to please bitten.
	  
	  There is a bug in trac's API concerning extracting properties of
	  nodes
	  containing the metadata.

2006-10-06 10:56  marques

	* [r2468] configure.ac, src/functionals.c, src/xc.h, src/xc_f.c,
	  testsuite/xc-get_data.c: *) Added automatic detection of the C
	  type that corresponds to the
	  Fortran type "integer". xc_f.c was the changed to use this macro.
	  This
	  should, hopefully, solve our previous problems. Now libxc has all
	  arguments "pure" Fortran integers.
	  
	  I tested this changes in i386 (ifc7.1), x64 (pathscale, nag, and
	  gfortran), and it passed all tests (with the exception of the
	  hyperpolarizability test that failed in ifc7.1 and *pathscale*,
	  but
	  Xavier alerady knows about it).
	  
	  *) Bug fix in xc-get_data.c. A missing "#include <stdlib.h>" was
	  making
	  the xc tests fail sometimes.

2006-10-05 11:14  marques

	* [r2462] src/Makefile.am, src/functionals.c, src/gga.c,
	  src/gga_c_lyp.c, src/gga_lb.c, src/gga_pbe.c, src/gga_x_b86.c,
	  src/lca.c, src/lca_lch.c, src/lca_omc.c, src/lda.c,
	  src/lda_c_amgb.c, src/lda_c_pw.c, src/lda_c_pz.c,
	  src/lda_c_vwn.c, src/lda_funcs.c, src/lda_x.c, src/mgga.c,
	  src/mgga_c_tpss.c, src/mgga_x_tpss.c, src/util.h, src/xc.h,
	  src/xc_f.c, testsuite/xc-consistency.c, testsuite/xc-get_data.c:
	  *) changed the names of all exported routines of libxc to xc_XXX,
	  and
	  the F90 variants as xc-f90_XXX. Now it looks more like a library
	  ;)
	  This, of course, amountd to a lot of small changes in the code...
	  
	  *) pursuing a problem with the exchange part of the PBE (a
	  division by
	  zero), I decided to dump the old routine and to implement it in
	  the more
	  general framework of "Becke 86-like functionals". It is now 5
	  lines of
	  code!

2006-10-04 14:09  marques

	* [r2456] src/gga.c, src/gga_c_lyp.c, src/gga_lb.c, src/gga_pbe.c,
	  src/gga_x_b86.c, src/lca.c, src/lca_lch.c, src/lca_omc.c,
	  src/lda.c, src/lda_c_amgb.c, src/lda_c_pw.c, src/lda_c_pz.c,
	  src/lda_c_vwn.c, src/lda_funcs.c, src/lda_x.c, src/mgga_c_tpss.c,
	  src/mgga_x_tpss.c, src/util.h, src/xc.h, src/xc_f.c,
	  testsuite/Makefile.am, testsuite/xc-consistency.c,
	  testsuite/xc-get_data.c, testsuite/xc-reference.pl,
	  testsuite/xc-run_regression_test.pl, testsuite/xc-run_testsuite:
	  *) Added a consistency cjeck on the functionals. Basic it is a
	  script
	  that calculates vxc using finite differences, calls libxc for the
	  analitic functional and compares the difference. By now, three
	  functionals give problems PBE (exchange) has some NAN lingering
	  around;
	  PBE (correlation) and G96 have large deviations from the fd
	  results.
	  
	  *) Added a "provides" line to func_type. This is, e.g.,
	  "XC_PROVIDES_EXC
	  | XC_PROVIDES_VXC". In this way, the upper level can know if it
	  has to
	  calculate something using finite differences.

2006-10-03 14:49  marques

	* [r2452] src/gga_c_lyp.c: Fixed the problems with the LYP
	  functional when rho[is]=0.

2006-10-03 14:48  marques

	* [r2451] testsuite/gga_c_pbe.data,
	  testsuite/gga_c_pbe.data-disabled,
	  testsuite/xc-run_regression_test.pl: * Disabled the test of the
	  correlation part of the PBE. I get
	  differences in teh 4th or 5th digit that I do not understand...
	  * Changed the way the tests were done, so that they are now
	  really
	  passed.

2006-10-02 22:28  marques

	* [r2448] src/functionals.c: Forgot this file...

2006-10-02 22:26  marques

	* [r2447] src/Makefile.am, src/gga.c, src/gga_c_lyp.c,
	  src/gga_lb.c, src/gga_pbe.c, src/gga_x_b86.c, src/gga_x_b88.c,
	  src/lda.c, src/lda_funcs.c, src/util.h, src/xc.h, src/xc_f.c,
	  testsuite/gga_c_lyp.data, testsuite/xc-run_regression_test.pl:
	  Next iteration of libxc
	  
	  *) Merged several functionals (B86, B88, G96 and variants) in one
	  routine as they are all of the same form
	  *) Added a routine family_from_id that simplifies initialization
	  of the
	  functionals
	  *) Added the functionals Gill 96 (anyone heard about this one?)
	  and LYP.
	  The LYP functional still has problems when the density is zero in
	  one of
	  the spin channels. So, please don't use if until I fix it.
	  *) Made the corresponding changes on the fortran side. Octopus
	  cannow
	  use all the functionals in libxc.

2006-09-29 13:44  marques

	* [r2440] Makefile.am, configure.ac, gga.c, gga_lb.c, gga_pbe.c,
	  gga_x_b88.c, lca.c, lca_lch.c, lca_omc.c, lda.c, lda_c_amgb.c,
	  lda_c_pw.c, lda_c_pz.c, lda_c_vwn.c, lda_funcs.c, lda_x.c,
	  mgga.c, mgga_c_tpss.c, mgga_x_tpss.c, src, src/Makefile.am,
	  src/gga.c, src/gga_lb.c, src/gga_pbe.c, src/gga_x_b86.c,
	  src/gga_x_b88.c, src/lca.c, src/lca_lch.c, src/lca_omc.c,
	  src/lda.c, src/lda_c_amgb.c, src/lda_c_pw.c, src/lda_c_pz.c,
	  src/lda_c_vwn.c, src/lda_funcs.c, src/lda_x.c, src/mgga.c,
	  src/mgga_c_tpss.c, src/mgga_x_tpss.c, src/test.c, src/util.c,
	  src/util.h, src/xc.h, src/xc_f.c, test.c, testsuite/Makefile.am,
	  testsuite/xc-get_data.c, testsuite/xc-run_regression_test.pl,
	  util.c, util.h, xc.h, xc_f.c: Next iteration in libxc. In this
	  new version I have:
	  
	  *) Moved source files to the directory src/. It is neater that
	  way
	  *) Delete the LDA speedup thing that Alberto had implemented, but
	  which
	  he agreed to delete
	  *) Added two more functionals: Becke 86 and Becke 86 reoptimized
	  *) GGAs are now handled in the same way as LDAs

2006-09-28 13:58  marques

	* [r2434] gga_lb.c, gga_pbe.c, gga_x_b88.c, lda.c, lda_c_amgb.c,
	  lda_c_pw.c, lda_c_pz.c, lda_c_vwn.c, lda_funcs.c, lda_x.c,
	  mgga_x_tpss.c, testsuite/xc-get_data.c, util.h, xc.h, xc_f.c:
	  Started a big cleaning in order to make libxc a bit more
	  elegant.Basically, there is now a mechanism to initialize, run
	  the
	  functional, and terminate it. In this way, there are no more the
	  horrendous switch statements in lda.c. The job is not finished
	  yet.

2006-09-28 11:06  marques

	* [r2433] Makefile.am, gga.c, gga_lb.c, gga_pbe.c, gga_x_b88.c,
	  testsuite/gga_c_pbe.data, testsuite/gga_x_b88.data,
	  testsuite/gga_x_pbe.data, testsuite/lda_c_pw.data,
	  testsuite/xc-get_data.c, testsuite/xc-run_regression_test.pl,
	  util.h, xc.h: *) Added Becke 88 to libxc. However, this
	  functional is still not called
	  from octopus. That will come later.
	  
	  *) The GGAs are now also tested. The exchange PBE and B88 pass
	  all test
	  without problems. The correlation part of the PBE does not,
	  however. The
	  differences are small (5th digit or so), so you may relax ;) In
	  any
	  case, I believe that the problem is, in fact, the "reference"
	  implementation that has an inconsistency in the constants it
	  uses...

2006-09-26 14:26  marques

	* [r2430] Makefile.am, configure.ac, lda.c, lda_c_pz.c,
	  lda_c_vwn.c, lda_x.c, testsuite, testsuite/Makefile.am,
	  testsuite/lda_c_pz.data, testsuite/lda_c_vwn.data,
	  testsuite/lda_c_vwn_rpa.data, testsuite/lda_x.data,
	  testsuite/xc-get_data.c, testsuite/xc-run_regression_test.pl,
	  testsuite/xc-run_testsuite, util.h, xc.h: The most important part
	  of this commit is the inclusion of tests for
	  some LDA functionals. The calculated value of these functionals
	  is
	  compared to reference data that can be found in
	  http://www.cse.clrc.ac.uk/qcg/dft/.
	  
	  Note that the tests do give some errors. This is related to fully
	  polarized cases, i.e., when rho_down=0. The reference data
	  hard-wires,
	  in this case, the value of vpot_down=0, which, in my opinion, is
	  not
	  correct. In any case, if the gas is fully polarized, the value of
	  vpot_down is irrelevant in this case ;)
	  
	  There were some very small precision issues in a couple of
	  functionals
	  that I adjusted in order to match the reference data.
	  
	  In the process I added two new LDA "functionals":
	  *) lda_c_pz_mod. This is the version of the Perdew Zunger
	  functional
	  modified by Alberto to match better the low and high rs regions
	  of the
	  parametrization. This is the old pz that we had in the code. The
	  original PZ functional is called lda_c_pz. Note that the default
	  is the
	  corrected functional.
	  *) lda_c_vwn_rpa. This is a parametrization of the RPA
	  correlation
	  energy using the VWN form, and that is also present in the
	  original
	  paper.
	  
	  Soon I will start playing with the GGAs ;)

2006-09-25 08:18  marques

	* [r2424] AUTHORS, COPYING, ChangeLog, INSTALL, Makefile.am, NEWS,
	  README, configure.ac, m4, m4/acx.m4: First step in Making libxc
	  independent. Now it contains its own
	  configuration script. There are, however, several things still to
	  clean.

2006-06-18 11:32  athimm

	* [r2221] .: Exclude build-aux from entering svn.

2006-06-01 09:06  xavier

	* [r2174] lca.c: Portability fix, variable declaration was not in
	  the beginning of file.

2006-05-24 10:16  athimm

	* [r2149] Makefile.am: a) python and xml
	  - Make python conditional, on by default.
	  
	  Use --disable-python to turn off python (see ./configure --help)
	  
	  - Remove variables.xml generation from main code, make it
	  python-private. variables.xml are only used by the GUI. Let it
	  live
	  under share for now, we'll see were we'll put it in the future,
	  perhaps it will be removed altogether.
	  
	  b) Add some vpath fixes

2006-05-19 15:17  athimm

	* [r2117] .: Update svn:ignore recursively.

2006-05-14 10:52  athimm

	* [r2073] .: Ignore config.h stamp file.

2006-05-12 18:41  athimm

	* [r2063] ., .cvsignore: Sanitize .cvsignore and recursively feed
	  svn:ignore with them.
	  
	  The entries mirror the school of not committing generated files
	  into
	  the repository. Whether this is good or bad needs to be decided,
	  and
	  I'm probably in favour of adding them (as well as maintainer-mode
	  protection), but until this is agreed upon the current curse is
	  `minimal'.

2006-04-08 19:42  acastro

	* [r1992] gga_pbe.c, lda.c, test.c, xc_f.c: Some more profiling
	  tags, and some unimportant changes. For example, now
	  the wavefunctions are not randomly generated if then a LCAO
	  calculation
	  is going to be performed.

2006-04-05 13:52  acastro

	* [r1982] lda.c, lda_x.c, xc.h, xc_f.c: The option to interpolated
	  the LDA functionals instead of recalculating
	  them every time is now compiled always, although it is only used
	  if the InterpolateLDA is set to yes.
	  I will experiment with it for a few months to see if it is
	  worthed to
	  keep it as an option.

2006-04-04 19:59  acastro

	* [r1980] lda.c: Still one bug.

2006-04-04 19:42  acastro

	* [r1979] gga_lb.c, gga_pbe.c, lda_funcs.c, lda_x.c, mgga_x_tpss.c,
	  test.c, xc.h, xc_f.c: The XAlpha correlation functional was badly
	  calculated when code was
	  compiled with the "LDA_SPEEDUP" preprocessor flag. This option is
	  still
	  way too experimental to be compiled by default. If you want to
	  try it,
	  you have to define LDA_SPEEDUP (for example, setting
	  CPPFLAGS="-DLDA_SPEEDUP" when configuring).

2006-03-21 11:51  micael

	* [r1939] gga_lb.c, gga_pbe.c, lda.c, lda_funcs.c, lda_x.c,
	  mgga_x_tpss.c, util.h, xc.h, xc_f.c: *) Syncing the libxc in APE
	  with the one in Octopus.
	  This new version includes the relativistic correction to the LDA
	  exchange functional.
	  This is not really important for Octopus (at least for the time
	  being) but it is
	  necessary for APE.

2006-03-07 18:41  acastro

	* [r1881] lda_c_vwn.c: Bug fixed.
	  The Vosko/Wilk/Nusair xc potential had a bug related to units.
	  
	  Every time the initialization function was called, some
	  "constant" was
	  divided by two, in order to go from rydbergs to atomic units. But
	  the
	  inialization function is called twice by octopus, so the result
	  was
	  a factor of four.

2006-01-31 11:11  acastro

	* [r1797] gga_lb.c: Bug fixed.
	  Removed the 05-Na2_LB94_Casida bug.
	  The LB94 is still rather under suspiscion, in any case.
	  
	  I don't know why the bug was there, in fact, it looked that the
	  code
	  that I removed was there for a reason, but I could not trace it
	  down
	  because it was there since the first revision...

2005-11-28 11:03  marques

	* [r1726] lda.c, lda_c_vwn.c, lda_x.c, test.c: *) very tiny bug
	  corrected in VWN (one of the constants was wrong in the 5th
	  digit)
	  *) fxc is now calculated numerically a bit better in case of the
	  ferromagnetic gas. Actually I don't really know how to handle
	  this case properly, as fxc should diverge (at least fx).

2005-11-12 19:47  acastro

	* [r1650] lda_c_amgb.c: Bug fixed.
	  One wrong character kept me busy the whole afternoon.

2005-11-09 09:13  marques

	* [r1642] lda.c, xc.h, xc_f.c: *) Alberto, I think that the "break"
	  in the fxc calculation should be a
	  "continue" (i.e., he should skip the rest of the current cycle,
	  but
	  should get out of the cycle). Can you please check?
	  *) Xavier, I guess that the calculation of Kxc should have a
	  similar to
	  the one Alberto put in for fxc. Can you please check?
	  *) I cleaned a little bit the includes, whitespaces, and changed
	  "(*p)." to
	  "p->" as it is more C-like.

2005-11-08 22:01  acastro

	* [r1641] lda.c: Bug fixed.
	  
	  The numerical functional derivation was not working properly in
	  some
	  spin-polarized cases (Perdew-Zunger parameterization, Na4(+1), it
	  was
	  just giving lots of NaN). Now, at least for those cases, it seems
	  to
	  work. I still have to do some more testing on the Casida module,
	  though.
	  
	  In any case, the PZ kernel should be obtained analytically. Maybe
	  in the
	  future.

2005-10-18 12:51  xavier

	* [r1570] lda.c, util.h, xc.h, xc_f.c: Added Kxc, the third
	  derivatives of Exc, to libxc. It's calculated using a
	  second order numerical derivative of Vxc.

2005-10-12 13:43  marques

	* [r1554] lda_c_pw.c: There was a sign wrong in the definition of
	  pw92.
	  
	  Micael, can you please test this functional?

2005-10-12 09:10  marques

	* [r1552] Makefile.am: Some cleaning:
	  *) test.x is no longer generated in libxc/
	  *) changed the names of several single character variables.
	  Please *do not*
	  call a variable a, b, n, c or whatever!!!!
	  *) I noticed that some of you had tabs of 3 and 4 spaces. Do not
	  forget that
	  the default we agreed upon some years ago was *2*. Please change
	  you emacs
	  settings!

2005-09-05 16:36  acastro

	* [r1365] Makefile.am: It seems that the test_x_LINK variable needs
	  to be defined in this way
	  so that the executable is actually built.

2005-08-30 14:24  acastro

	* [r1346] Makefile.am: Since the test.x program is all C, it is
	  better to link with the C compiler.
	  Otherwise some Fortran compilers (i.e. the Intel 9.0 version)
	  seem to have
	  problems with a duplicated "main" function.

2005-07-11 13:23  acastro

	* [r1255] test.c: The xyzanim utility was broken, at least in the
	  IBM machines. I put
	  an emergency fix. If I get time I will take a look at the
	  utilities, see how
	  the system labels affect them, and make up some tests for them.
	  
	  Also, the IBM preprocessor had problems with the // comments in C
	  files..

2005-06-30 09:54  marques

	* [r1220] util.h: There were a couple of misspells in function
	  names

2005-06-07 11:58  acastro

	* [r1201] Makefile.am, xc_f.c: I forgot to change also this when I
	  changed the config.h stuff.

2005-05-17 09:55  appel

	* [r1121] Makefile.am: Add $Id:$ tags to most of the files (right
	  below the GPL header). At every
	  commit cvs is replacing these tags with lines of the following
	  form
	  
	  $Id: run_regression.pl,v 1.3 2005/05/12 10:23:59 marques Exp $
	  
	  In this way it is easy to see who was the last person changing
	  the file, which
	  cvs revision the file has and at what date the last change was
	  made.
	  
	  Miguel: Is there a reason why the *.c files in libxc/ don't have
	  a GPL header?

2005-04-06 16:33  marques

	* [r1081] lca_lch.c, lca_omc.c: LOL! Calculating derivatives is
	  always a hassle, even if only of simple functions ;))) Please
	  recheck them.

2005-04-06 14:45  micael

	* [r1079] Makefile.am, lca.c, lca_lch.c, lca_omc.c, util.h, xc.h,
	  xc_f.c: *) Added the Vignale-Rasolt functional for CDFT to libxc.
	  Two parametrizations
	  are available. This has *not* been tested carefully yet.

2005-04-04 12:57  acastro

	* [r1074] mgga_c_tpss.c: [*] A small change in the
	  "nl_operator_operate" subroutines, which,
	  specially in the complex case, seems to speed up things
	  significantly.
	  But most likely it does so only in some architecutures/compilers.
	  In the
	  case of the Portland compiler for opterons, the speedup is rather
	  spectacular, probably because before the type conversion was very
	  slow (the opteron was running slower that my laptop!)
	  [*] In mgga_c_tpss, some Portland C compilers complained about
	  those
	  array definitions, I think it is more correct now.

2005-03-28 10:47  acastro

	* [r1061] Makefile.am, lda.c, lda_x.c, xc.h, xc_f.c: A pretty sick
	  performance hack.
	  
	  The idea is the following: instead of calculating the LDA
	  functionals
	  everytime, one can "spline" them at the beginning, and then
	  interpolate
	  every time, since they are very smooth functions. Some comments:
	  
	  (*) The calculation of the LDA exchange and correlation
	  functionals do
	  not take a significant calculation time, *except* if one wants to
	  use the
	  SIC+LDA within the OEP/KLI approximation for a big molecule.
	  (*) This commit is still experimental, and in fact the code is
	  still
	  exactly the same as it was, if you do not compile adding the
	  LDA_SPEEDUP
	  preprocessor variable (by doing CFLAGS="-O3 -DLDA_SPEEDUP", for
	  example).
	  So you do not have to worry at all about this for the moment...
	  I will make sure that it works well and that it makes sense
	  before making
	  it definive.

2005-03-17 20:32  marques

	* [r1048] xc_f.c: This file was missing from the previous commit.

2005-03-17 17:33  marques

	* [r1044] lda.c: Just a small rearrangement.

2005-03-17 17:23  marques

	* [r1043] gga_lb.c, gga_pbe.c, lda.c, lda_c_pw.c, lda_funcs.c,
	  lda_x.c, mgga_x_tpss.c, test.c, util.h, xc.h, xc_f.c: *) Removed
	  "relativistic exchange", as, I am not mistaken, the potential was
	  wrong.
	  *) Added support for LDA fxc. For now, fxc for exchange and
	  Perdew Wang
	  correlation are analytical, while the rest is calculated through
	  finite
	  differences. Honestly, from the tests I've made, I am inclined to
	  believe
	  that it is actually better to get the numerical derivative.
	  (However, I
	  would not throw away the work of a full day, would I ;)

2005-02-22 12:03  acastro

	* [r1014] lda_funcs.c: Bug fixed.
	  A small bug in the definition of the Slater Xalpha potential.
	  (Before it just added again the excahnge fucntional)
	  
	  Also, I have changed the definition of the alpha constant, to
	  meet the
	  usual definition in the literature:
	  
	  E_{xc}^{Xalpha} = (3/2)*alpha*E_x^{LDA}
	  
	  which means that the Xalpha correlation potential should be
	  defined as:
	  
	  E_{c}^{Xalpha} = ( (3/2)*alpha - 1)*E_x^{LDA}
	  
	  I have set the default to alpha = 1. In any case, the logical
	  thing would
	  be to define this functional as a exchange functional, rather
	  than as a
	  correlation part to be added to the exchange. But it is not
	  worthed to
	  loose too much time with this functional anyway...

2005-02-15 13:51  acastro

	* [r1007] xc_f.c: I have put the embryo of what could be the
	  octopus developer's guide.
	  It just contains the description of one module, which is lib_xc,
	  the
	  interface to Miguel's C library that contains the LDA, GGA and
	  mGGA
	  functionals. And in fact it is not even complete.
	  
	  In the way, I have decided to simplify a little bit the interface
	  to the library, so that it is a little bit more user friendly.

2005-02-02 03:07  appel

	* [r996] ., .cvsignore: now we are complete.

2004-12-15 15:01  marques

	* [r964] mgga_c_tpss.c, mgga_x_tpss.c: A couple of bugs solved, but
	  I still get non-sense. This functiona is too
	  sensitive to numerical erors in the calculation of derivatives, I
	  think...

2004-12-07 20:40  marques

	* [r957] mgga.c, mgga_c_tpss.c, xc_f.c: MGGA "runs" but gives
	  non-sense!

2004-12-07 15:46  marques

	* [r956] gga_pbe.c, mgga.c, mgga_c_tpss.c, test.c, util.h: Bug
	  fixed in correlation PBE (yes, there was a serious bug there)
	  TPSS correlation is apparently working for spin-unpolarized
	  systems. I still
	  did not check the spin-polarized functionals (neither x nor c).

2004-12-01 00:05  marques

	* [r946] gga_lb.c, gga_pbe.c, lda_c_amgb.c, lda_c_pw.c, lda_c_pz.c,
	  lda_c_vwn.c, lda_funcs.c, lda_x.c, mgga.c, mgga_c_tpss.c,
	  mgga_x_tpss.c, test.c, util.h, xc.h, xc_f.c: code now compiles
	  and runs with -ansi flag. Hope this solves your problems,
	  Alberto.

2004-11-23 15:53  marques

	* [r938] Makefile.am, mgga.c, mgga_c_tpss.c, mgga_x_tpss.c, test.c,
	  util.h, xc.h: I am implementing the TPSS meta-GGA. The exchange
	  part is probably working,
	  the correlation is still a first draft.

2004-10-28 20:34  marques

	* [r915] gga_pbe.c, lda_x.c, util.h, xc_f.c: several bug fixes.

2004-10-27 18:34  marques

	* [r912] Makefile.am, gga.c, gga_lb.c, util.h, xc.h, xc_f.c: added
	  lb94 functional. As we all know this functional ahs problems, and
	  I am really not sure if these problems are handled correctly.

2004-10-27 15:03  marques

	* [r910] Makefile.am, gga.c, gga_pbe.c, lda.c, lda_c_amgb.c,
	  lda_c_pw.c, lda_c_pz.c, lda_c_vwn.c, lda_funcs.c, lda_x.c,
	  util.h, xc.h, xc_f.c: There is now a mechanism to provide
	  informations about the functionals being used.

2004-10-26 20:12  marques

	* [r907] Makefile.am, gga.c, gga_pbe.c, lda.c, util.c, util.h,
	  xc.h, xc_f.c: First support for GGAs.
	  Added PBE.

2004-10-21 15:01  marques

	* [r904] util.c: removed an erraneous #include

2004-10-20 16:41  marques

	* [r900] xc_f.c: *) Changed (again) the restart files because:
	  1) There was a bug reading the occupations and the eigenvalues
	  2) It did not work for spin-polarized calculations
	  
	  *) Added support for the libxc LDA functionals. Due to this
	  reason, GGAs
	  and the other functionals are desactivated. Now octopus can use
	  the
	  13 LDAs provided by libxc.

2004-10-20 13:39  marques

	* [r898] ., Makefile.am, lda.c, lda_c_amgb.c, lda_c_pw.c,
	  lda_c_pz.c, lda_c_vwn.c, lda_funcs.c, lda_x.c, test.c, util.c,
	  util.h, xc.h, xc_f.c: The begining of our library of xc
	  functionals. There are 13 LDA functionals implemented until now.
	  The unpolarized versions work I think. The polarized I have some
	  doubts, and we should do some further checking.

