#!/usr/bin/env perl

my $srcdir     = $ARGV[0];
my $functional = $ARGV[1];
my $order      = $ARGV[2];

my $mathfile = "$srcdir/mathematica/functionals/$functional.m";

# Find out the type of functional
open my $in, '<', $mathfile or 
    die "File $srcdir/mathematica/functionals/$functional.m does not exist\n";

my $functype = "";
my $prefix   = "";
while($_ = <$in>){
  if(/^\(\* type:\s(\S*)\s/){
    $functype = $1;
  };
  if(/^\(\* prefix:/){
    while( ($_ = <$in>) && ! /^\*\)/ ){
      $prefix .= $_;
    }
  }
}
close($in);

open my $out, '>', "$srcdir/src/math2c/$functional.c" or 
    die "Could not open file $srcdir/math2c/$functional.c for writing\n";

print $out "/* 
  This file was generated automatically with $0.
  Do not edit this file directly as it can be overwritten!!

  Mathematica source: $mathfile
  Type of functional: $functype
*/
";

if($functype ne "work_gga_x"){
  die "Only work_gga_x is implemented at the moment\n";
}

my @der_type = ("f", "dfdx", "d2fdx2", "d3fdx3");
  print $out "
void XC(math2c_${functional}_enhance)
  (const XC(func_type) *p, int order, 
   FLOAT x, FLOAT *f, FLOAT *dfdx, FLOAT *d2fdx2, FLOAT *d3fdx3)
{
$prefix
";

@math_replace = (
  "params"       , "params->",
  "Pi"           , "M_PI",
  "XFACTORC"     , "X_FACTOR_C",
  "MUGE"         , "MU_GE",
  "Power.E,"     , "EXP(",
  "Power"        , "POW",
  "Sqrt"         , "SQRT",
  "Log"          , "LOG",
  "ArcSinh"      , "asinh",
  "Tanh"         , "TANH",
  "PolyLog.2,"   , "XC(dilogarithm)(",
  "ProductLOG."  , "XC(lambert_w)(",
);

for(my $i=0; $i<=$order; $i++){
  print $out "
  if(order < $i) return;

  *$der_type[$i] = ";

  my $math = `math -script $srcdir/mathematica/work_gga_x.m $mathfile $i`;
  for(my $j=0; $j<$#math_replace; $j+=2){
    $math =~ s/$math_replace[$j]/$math_replace[$j+1]/g;
  }
  print $out "$math;\n";
}
print $out "}\n

#define math2c_order $order
#define math2c_func  XC(math2c_${functional}_enhance)
\n";

close($out);
